

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 29 12:32:06 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18LF4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  001270                     __pidataCOMRAM:
    90                           	callstack 0
    91                           
    92                           ;initializer for _eish
    93  001270  39                 	db	low STR_1
    94  001271  08                 	db	high STR_1
    95  001272  31                 	db	low STR_2
    96  001273  08                 	db	high STR_2
    97  001274  20                 	db	low STR_3
    98  001275  08                 	db	high STR_3
    99  001276  01                 	db	low STR_4
   100  001277  08                 	db	high STR_4
   101  001278  16                 	db	low STR_5
   102  001279  08                 	db	high STR_5
   103  00127A  29                 	db	low STR_6
   104  00127B  08                 	db	high STR_6
   105  00127C  0C                 	db	low STR_7
   106  00127D  08                 	db	high STR_7
   107                           
   108                           ;initializer for DS1307_Display_UART@F3235
   109  00127E  30                 	db	48
   110  00127F  30                 	db	48
   111  001280  3A                 	db	58
   112  001281  30                 	db	48
   113  001282  30                 	db	48
   114  001283  3A                 	db	58
   115  001284  30                 	db	48
   116  001285  30                 	db	48
   117  001286  00                 	db	0
   118  001287  00                 	db	0
   119  001288  00                 	db	0
   120                           
   121                           	psect	idataBANK0
   122  001300                     __pidataBANK0:
   123                           	callstack 0
   124                           
   125                           ;initializer for DS1307_Display_UART@F3237
   126  001300  30                 	db	48
   127  001301  30                 	db	48
   128  001302  2F                 	db	47
   129  001303  30                 	db	48
   130  001304  30                 	db	48
   131  001305  2F                 	db	47
   132  001306  32                 	db	50
   133  001307  30                 	db	48
   134  001308  30                 	db	48
   135  001309  30                 	db	48
   136  00130A  00                 	db	0
   137  00130B  00                 	db	0
   138  00130C  00                 	db	0
   139  0000                     _TXREG	set	4013
   140  0000                     _RCREG	set	4014
   141  0000                     _RCSTAbits	set	4011
   142  0000                     _IPR1bits	set	3999
   143  0000                     _RCSTA	set	4011
   144  0000                     _SPBRGH	set	4016
   145  0000                     _SPBRG	set	4015
   146  0000                     _BAUDCONbits	set	4024
   147  0000                     _TXSTAbits	set	4012
   148  0000                     _BAUDCON	set	4024
   149  0000                     _TXSTA	set	4012
   150  0000                     _LATDbits	set	3980
   151  0000                     _SSPBUF	set	4041
   152  0000                     _SSPCON2bits	set	4037
   153  0000                     _SSPADD	set	4040
   154  0000                     _SSPCON2	set	4037
   155  0000                     _SSPCON1	set	4038
   156  0000                     _SSPSTATbits	set	4039
   157  0000                     _WDTCONbits	set	4049
   158  0000                     _TRISBbits	set	3987
   159  0000                     _INTCON3bits	set	4080
   160  0000                     _LATCbits	set	3979
   161  0000                     _TRISCbits	set	3988
   162  0000                     _LATD	set	3980
   163  0000                     _TRISD	set	3989
   164  0000                     _TRISAbits	set	3986
   165  0000                     _ADCON1	set	4033
   166  0000                     _RCONbits	set	4048
   167  0000                     _T0CONbits	set	4053
   168  0000                     _INTCON2bits	set	4081
   169  0000                     _T0CON	set	4053
   170  0000                     _TMR0L	set	4054
   171  0000                     _TMR0H	set	4055
   172  0000                     _INTCONbits	set	4082
   173  0000                     _PIR1bits	set	3998
   174  0000                     _PIE1bits	set	3997
   175                           
   176                           	psect	smallconst
   177  000800                     __psmallconst:
   178                           	callstack 0
   179  000800  00                 	db	0
   180  000801                     STR_4:
   181  000801  2C                 	db	44
   182  000802  57                 	db	87	;'W'
   183  000803  65                 	db	101	;'e'
   184  000804  64                 	db	100	;'d'
   185  000805  6E                 	db	110	;'n'
   186  000806  65                 	db	101	;'e'
   187  000807  73                 	db	115	;'s'
   188  000808  64                 	db	100	;'d'
   189  000809  61                 	db	97	;'a'
   190  00080A  79                 	db	121	;'y'
   191  00080B  00                 	db	0
   192  00080C                     STR_7:
   193  00080C  2C                 	db	44
   194  00080D  53                 	db	83	;'S'
   195  00080E  61                 	db	97	;'a'
   196  00080F  74                 	db	116	;'t'
   197  000810  75                 	db	117	;'u'
   198  000811  72                 	db	114	;'r'
   199  000812  64                 	db	100	;'d'
   200  000813  61                 	db	97	;'a'
   201  000814  79                 	db	121	;'y'
   202  000815  00                 	db	0
   203  000816                     STR_5:
   204  000816  2C                 	db	44
   205  000817  54                 	db	84	;'T'
   206  000818  68                 	db	104	;'h'
   207  000819  75                 	db	117	;'u'
   208  00081A  72                 	db	114	;'r'
   209  00081B  73                 	db	115	;'s'
   210  00081C  64                 	db	100	;'d'
   211  00081D  61                 	db	97	;'a'
   212  00081E  79                 	db	121	;'y'
   213  00081F  00                 	db	0
   214  000820                     STR_3:
   215  000820  2C                 	db	44
   216  000821  54                 	db	84	;'T'
   217  000822  75                 	db	117	;'u'
   218  000823  65                 	db	101	;'e'
   219  000824  73                 	db	115	;'s'
   220  000825  64                 	db	100	;'d'
   221  000826  61                 	db	97	;'a'
   222  000827  79                 	db	121	;'y'
   223  000828  00                 	db	0
   224  000829                     STR_6:
   225  000829  2C                 	db	44
   226  00082A  46                 	db	70	;'F'
   227  00082B  72                 	db	114	;'r'
   228  00082C  69                 	db	105	;'i'
   229  00082D  64                 	db	100	;'d'
   230  00082E  61                 	db	97	;'a'
   231  00082F  79                 	db	121	;'y'
   232  000830  00                 	db	0
   233  000831                     STR_2:
   234  000831  2C                 	db	44
   235  000832  4D                 	db	77	;'M'
   236  000833  6F                 	db	111	;'o'
   237  000834  6E                 	db	110	;'n'
   238  000835  64                 	db	100	;'d'
   239  000836  61                 	db	97	;'a'
   240  000837  79                 	db	121	;'y'
   241  000838  00                 	db	0
   242  000839                     STR_1:
   243  000839  2C                 	db	44
   244  00083A  53                 	db	83	;'S'
   245  00083B  75                 	db	117	;'u'
   246  00083C  6E                 	db	110	;'n'
   247  00083D  64                 	db	100	;'d'
   248  00083E  61                 	db	97	;'a'
   249  00083F  79                 	db	121	;'y'
   250  000840  00                 	db	0
   251  000841  25                 	db	37
   252  000842  75                 	db	117	;'u'
   253  000843  00                 	db	0
   254  000844  00                 	db	0	; dummy byte at the end
   255  0000                     
   256                           ; #config settings
   257                           
   258                           	psect	cinit
   259  000E7E                     __pcinit:
   260                           	callstack 0
   261  000E7E                     start_initialization:
   262                           	callstack 0
   263  000E7E                     __initialization:
   264                           	callstack 0
   265                           
   266                           ; Initialize objects allocated to BANK0 (13 bytes)
   267                           ; load TBLPTR registers with __pidataBANK0
   268  000E7E  0E00               	movlw	low __pidataBANK0
   269  000E80  6EF6               	movwf	tblptrl,c
   270  000E82  0E13               	movlw	high __pidataBANK0
   271  000E84  6EF7               	movwf	tblptrh,c
   272  000E86  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   273  000E88  6EF8               	movwf	tblptru,c
   274  000E8A  EE00  F0B0         	lfsr	0,__pdataBANK0
   275  000E8E  EE10 F00D          	lfsr	1,13
   276  000E92                     copy_data0:
   277  000E92  0009               	tblrd		*+
   278  000E94  CFF5 FFEE          	movff	tablat,postinc0
   279  000E98  50E5               	movf	postdec1,w,c
   280  000E9A  50E1               	movf	fsr1l,w,c
   281  000E9C  E1FA               	bnz	copy_data0
   282                           
   283                           ; Initialize objects allocated to COMRAM (25 bytes)
   284                           ; load TBLPTR registers with __pidataCOMRAM
   285  000E9E  0E70               	movlw	low __pidataCOMRAM
   286  000EA0  6EF6               	movwf	tblptrl,c
   287  000EA2  0E12               	movlw	high __pidataCOMRAM
   288  000EA4  6EF7               	movwf	tblptrh,c
   289  000EA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   290  000EA8  6EF8               	movwf	tblptru,c
   291  000EAA  EE00  F032         	lfsr	0,__pdataCOMRAM
   292  000EAE  EE10 F019          	lfsr	1,25
   293  000EB2                     copy_data1:
   294  000EB2  0009               	tblrd		*+
   295  000EB4  CFF5 FFEE          	movff	tablat,postinc0
   296  000EB8  50E5               	movf	postdec1,w,c
   297  000EBA  50E1               	movf	fsr1l,w,c
   298  000EBC  E1FA               	bnz	copy_data1
   299                           
   300                           ; Clear objects allocated to BIGRAM (512 bytes)
   301  000EBE  EE00  F0C4         	lfsr	0,__pbssBIGRAM
   302  000EC2  EE12 F000          	lfsr	1,512
   303  000EC6                     clear_0:
   304  000EC6  6AEE               	clrf	postinc0,c
   305  000EC8  50E5               	movf	postdec1,w,c
   306  000ECA  50E1               	movf	fsr1l,w,c
   307  000ECC  E1FC               	bnz	clear_0
   308  000ECE  50E2               	movf	fsr1h,w,c
   309  000ED0  E1FA               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to BANK0 (80 bytes)
   312  000ED2  EE00  F060         	lfsr	0,__pbssBANK0
   313  000ED6  0E50               	movlw	80
   314  000ED8                     clear_1:
   315  000ED8  6AEE               	clrf	postinc0,c
   316  000EDA  06E8               	decf	wreg,f,c
   317  000EDC  E1FD               	bnz	clear_1
   318                           
   319                           ; Clear objects allocated to COMRAM (10 bytes)
   320  000EDE  EE00  F04B         	lfsr	0,__pbssCOMRAM
   321  000EE2  0E0A               	movlw	10
   322  000EE4                     clear_2:
   323  000EE4  6AEE               	clrf	postinc0,c
   324  000EE6  06E8               	decf	wreg,f,c
   325  000EE8  E1FD               	bnz	clear_2
   326  000EEA                     end_of_initialization:
   327                           	callstack 0
   328  000EEA                     __end_of__initialization:
   329                           	callstack 0
   330  000EEA  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331  000EEC  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332  000EEE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   333  000EF0  6EF8               	movwf	tblptru,c
   334  000EF2  0E08               	movlw	high __Lsmallconst
   335  000EF4  6EF7               	movwf	tblptrh,c
   336  000EF6  0100               	movlb	0
   337  000EF8  EF7E  F007         	goto	_main	;jump to C main() function
   338                           
   339                           	psect	bssCOMRAM
   340  00004B                     __pbssCOMRAM:
   341                           	callstack 0
   342  00004B                     __rx_buffer_tail:
   343                           	callstack 0
   344  00004B                     	ds	2
   345  00004D                     __rx_buffer_head:
   346                           	callstack 0
   347  00004D                     	ds	2
   348  00004F                     _flag:
   349                           	callstack 0
   350  00004F                     	ds	1
   351  000050                     _dummy:
   352                           	callstack 0
   353  000050                     	ds	1
   354  000051                     _state_machine:
   355                           	callstack 0
   356  000051                     	ds	1
   357  000052                     _seconds:
   358                           	callstack 0
   359  000052                     	ds	1
   360  000053                     __tx_buffer_tail:
   361                           	callstack 0
   362  000053                     	ds	1
   363  000054                     __tx_buffer_head:
   364                           	callstack 0
   365  000054                     	ds	1
   366                           
   367                           	psect	dataCOMRAM
   368  000032                     __pdataCOMRAM:
   369                           	callstack 0
   370  000032                     _eish:
   371                           	callstack 0
   372  000032                     	ds	14
   373  000040                     DS1307_Display_UART@F3235:
   374                           	callstack 0
   375  000040                     	ds	11
   376                           
   377                           	psect	bssBANK0
   378  000060                     __pbssBANK0:
   379                           	callstack 0
   380  000060                     __tx_buffer:
   381                           	callstack 0
   382  000060                     	ds	64
   383  0000A0                     _myIP:
   384                           	callstack 0
   385  0000A0                     	ds	16
   386                           
   387                           	psect	dataBANK0
   388  0000B0                     __pdataBANK0:
   389                           	callstack 0
   390  0000B0                     DS1307_Display_UART@F3237:
   391                           	callstack 0
   392  0000B0                     	ds	13
   393                           
   394                           	psect	bssBIGRAM
   395  0000C4                     __pbssBIGRAM:
   396                           	callstack 0
   397  0000C4                     __rx_buffer:
   398                           	callstack 0
   399  0000C4                     	ds	512
   400                           
   401                           	psect	cstackBANK0
   402  0000BD                     __pcstackBANK0:
   403                           	callstack 0
   404  0000BD                     main@now:
   405                           	callstack 0
   406                           
   407                           ; 7 bytes @ 0x0
   408  0000BD                     	ds	7
   409                           
   410                           	psect	cstackCOMRAM
   411  000001                     __pcstackCOMRAM:
   412                           	callstack 0
   413  000001                     ??_UART_rx_complete_irq:
   414  000001                     UART_tx_udr_empty_irq@c:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x0
   418  000001                     	ds	2
   419  000003                     UART_rx_complete_irq@c:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x2
   423  000003                     	ds	1
   424  000004                     UART_rx_complete_irq@i:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x3
   428  000004                     	ds	2
   429  000006                     ??_myISR_high:
   430                           
   431                           ; 1 bytes @ 0x5
   432  000006                     	ds	2
   433  000008                     ??_myISR_low:
   434                           
   435                           ; 1 bytes @ 0x7
   436  000008                     	ds	3
   437  00000B                     ?___lldiv:
   438                           	callstack 0
   439  00000B                     ?___aldiv:
   440                           	callstack 0
   441  00000B                     i2c_read@ACK_NACK:
   442                           	callstack 0
   443  00000B                     i2c_write@data:
   444                           	callstack 0
   445  00000B                     LCD_send@data:
   446                           	callstack 0
   447  00000B                     UART_write@data:
   448                           	callstack 0
   449  00000B                     BCD_to_ASCII@ptr:
   450                           	callstack 0
   451  00000B                     ___lldiv@dividend:
   452                           	callstack 0
   453  00000B                     ___aldiv@dividend:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0xA
   457  00000B                     	ds	1
   458  00000C                     ??_LCD_send:
   459  00000C                     UART_write@i:
   460                           	callstack 0
   461  00000C                     DS1307_read@myTime:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xB
   465  00000C                     	ds	1
   466  00000D                     BCD_to_ASCII@valueInBCD:
   467                           	callstack 0
   468  00000D                     LCD_send@RS:
   469                           	callstack 0
   470  00000D                     UART_puts@ptr:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xC
   474  00000D                     	ds	1
   475  00000E                     ??_LCD_init:
   476  00000E                     ??_LCD_clear:
   477  00000E                     LCD_goto@y:
   478                           	callstack 0
   479  00000E                     LCD_putrs@s:
   480                           	callstack 0
   481  00000E                     LCD_puts@s:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0xD
   485  00000E                     	ds	1
   486  00000F                     ??_LCD_goto:
   487  00000F                     ___lldiv@divisor:
   488                           	callstack 0
   489  00000F                     ___aldiv@divisor:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0xE
   493  00000F                     	ds	1
   494  000010                     LCD_goto@x:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xF
   498  000010                     	ds	1
   499  000011                     DS1307_Display_UART@myTime:
   500                           	callstack 0
   501                           
   502                           ; 7 bytes @ 0x10
   503  000011                     	ds	2
   504  000013                     ___aldiv@counter:
   505                           	callstack 0
   506  000013                     ___lldiv@quotient:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x12
   510  000013                     	ds	1
   511  000014                     ___aldiv@sign:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x13
   515  000014                     	ds	1
   516  000015                     ___aldiv@quotient:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x14
   520  000015                     	ds	2
   521  000017                     ___lldiv@counter:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x16
   525  000017                     	ds	1
   526  000018                     ??_DS1307_Display_UART:
   527  000018                     UART_Init@baudRate:
   528                           	callstack 0
   529                           
   530                           ; 3 bytes @ 0x17
   531  000018                     	ds	1
   532  000019                     I2C_INTIALIZE@clock:
   533                           	callstack 0
   534                           
   535                           ; 3 bytes @ 0x18
   536  000019                     	ds	1
   537  00001A                     DS1307_Display_UART@dateStr:
   538                           	callstack 0
   539                           
   540                           ; 13 bytes @ 0x19
   541  00001A                     	ds	1
   542  00001B                     ??_UART_Init:
   543                           
   544                           ; 1 bytes @ 0x1A
   545  00001B                     	ds	1
   546  00001C                     ??_I2C_INTIALIZE:
   547                           
   548                           ; 1 bytes @ 0x1B
   549  00001C                     	ds	3
   550  00001F                     UART_Init@temp:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x1E
   554  00001F                     	ds	8
   555  000027                     DS1307_Display_UART@timeStr:
   556                           	callstack 0
   557                           
   558                           ; 11 bytes @ 0x26
   559  000027                     	ds	11
   560  000032                     
   561                           ; 1 bytes @ 0x31
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 81 in file "main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  now             7    0[BANK0 ] struct .
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   581 ;;      Params:         0       0       0       0       0       0       0       0       0
   582 ;;      Locals:         0       7       0       0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0
   584 ;;      Totals:         0       7       0       0       0       0       0       0       0
   585 ;;Total ram usage:        7 bytes
   586 ;; Hardware stack levels required when called: 6
   587 ;; This function calls:
   588 ;;		_DS1307_Display_UART
   589 ;;		_DS1307_read
   590 ;;		_Enable_Interrupt
   591 ;;		_I2C_INTIALIZE
   592 ;;		_Interrupt_Init
   593 ;;		_LCD_clear
   594 ;;		_LCD_init
   595 ;;		_Ports_Init
   596 ;;		_UART_Init
   597 ;;		_timerStart
   598 ;;		_timerZero_Init
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605  000EFC                     __ptext0:
   606                           	callstack 0
   607  000EFC                     _main:
   608                           	callstack 25
   609  000EFC                     
   610                           ;main.c: 83:     time now;;main.c: 85:     Ports_Init();
   611  000EFC  EC18  F009         	call	_Ports_Init	;wreg free
   612  000F00                     
   613                           ;main.c: 87:     LCD_init();
   614  000F00  ECA5  F006         	call	_LCD_init	;wreg free
   615  000F04                     
   616                           ;main.c: 89:     UART_Init(115200);
   617  000F04  0E00               	movlw	0
   618  000F06  6E18               	movwf	UART_Init@baudRate^0,c
   619  000F08  0EC2               	movlw	194
   620  000F0A  6E19               	movwf	(UART_Init@baudRate+1)^0,c
   621  000F0C  0E01               	movlw	1
   622  000F0E  6E1A               	movwf	(UART_Init@baudRate+2)^0,c
   623  000F10  EC23  F004         	call	_UART_Init	;wreg free
   624  000F14                     
   625                           ;main.c: 91:     I2C_INTIALIZE(100000);
   626  000F14  0EA0               	movlw	160
   627  000F16  6E19               	movwf	I2C_INTIALIZE@clock^0,c
   628  000F18  0E86               	movlw	134
   629  000F1A  6E1A               	movwf	(I2C_INTIALIZE@clock+1)^0,c
   630  000F1C  0E01               	movlw	1
   631  000F1E  6E1B               	movwf	(I2C_INTIALIZE@clock+2)^0,c
   632  000F20  ECF6  F007         	call	_I2C_INTIALIZE	;wreg free
   633  000F24                     
   634                           ;main.c: 93:     timerZero_Init();
   635  000F24  EC51  F009         	call	_timerZero_Init	;wreg free
   636  000F28                     
   637                           ;main.c: 95:     Interrupt_Init();
   638  000F28  EC79  F009         	call	_Interrupt_Init	;wreg free
   639  000F2C                     
   640                           ;main.c: 97:     LCD_clear();
   641  000F2C  EC2A  F009         	call	_LCD_clear	;wreg free
   642                           
   643                           ;main.c: 99:     timerStart();
   644  000F30  EC87  F009         	call	_timerStart	;wreg free
   645                           
   646                           ;main.c: 101:     Enable_Interrupt();
   647  000F34  EC8B  F009         	call	_Enable_Interrupt	;wreg free
   648  000F38                     l2392:
   649                           
   650                           ;main.c: 104:     {;main.c: 105:         if(flag)
   651  000F38  504F               	movf	_flag^0,w,c	;volatile
   652  000F3A  B4D8               	btfsc	status,2,c
   653  000F3C  EFA2  F007         	goto	u1481
   654  000F40  EFA4  F007         	goto	u1480
   655  000F44                     u1481:
   656  000F44  EF9C  F007         	goto	l2392
   657  000F48                     u1480:
   658  000F48                     
   659                           ;main.c: 106:         {;main.c: 107:             flag = 0;
   660  000F48  0E00               	movlw	0
   661  000F4A  6E4F               	movwf	_flag^0,c	;volatile
   662  000F4C                     
   663                           ;main.c: 108:             DS1307_read(&now);
   664  000F4C  0EBD               	movlw	low main@now
   665  000F4E  6E0C               	movwf	DS1307_read@myTime^0,c
   666  000F50  0E00               	movlw	high main@now
   667  000F52  6E0D               	movwf	(DS1307_read@myTime+1)^0,c
   668  000F54  ECFF  F005         	call	_DS1307_read	;wreg free
   669  000F58                     
   670                           ;main.c: 109:             DS1307_Display_UART(now);
   671  000F58  EE20  F0BD         	lfsr	2,main@now
   672  000F5C  EE00  F011         	lfsr	0,DS1307_Display_UART@myTime
   673  000F60  0E06               	movlw	6
   674  000F62                     u1491:
   675  000F62  CFDB FFEB          	movff	plusw2,plusw0
   676  000F66  06E8               	decf	wreg,f,c
   677  000F68  E2FC               	bc	u1491
   678  000F6A  EC7D  F005         	call	_DS1307_Display_UART	;wreg free
   679  000F6E  EF9C  F007         	goto	l2392
   680  000F72  EF30  F000         	goto	start
   681  000F76                     __end_of_main:
   682                           	callstack 0
   683                           
   684 ;; *************** function _timerZero_Init *****************
   685 ;; Defined at:
   686 ;;		line 115 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   700 ;;      Params:         0       0       0       0       0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; Hardware stack levels required when called: 3
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text1
   715  0012A2                     __ptext1:
   716                           	callstack 0
   717  0012A2                     _timerZero_Init:
   718                           	callstack 27
   719  0012A2                     
   720                           ;main.c: 116:     TMR0H = 0xC2;
   721  0012A2  0EC2               	movlw	194
   722  0012A4  6ED7               	movwf	215,c	;volatile
   723                           
   724                           ;main.c: 117:     TMR0L = 0xF7;
   725  0012A6  0EF7               	movlw	247
   726  0012A8  6ED6               	movwf	214,c	;volatile
   727                           
   728                           ;main.c: 118:     T0CON = 0b10000111;
   729  0012AA  0E87               	movlw	135
   730  0012AC  6ED5               	movwf	213,c	;volatile
   731  0012AE                     
   732                           ;main.c: 119:     INTCON2bits.TMR0IP = 0;
   733  0012AE  94F1               	bcf	241,2,c	;volatile
   734  0012B0                     
   735                           ;main.c: 120:     INTCONbits.TMR0IF = 0;
   736  0012B0  94F2               	bcf	242,2,c	;volatile
   737  0012B2                     
   738                           ;main.c: 121:     INTCONbits.TMR0IE = 1;
   739  0012B2  8AF2               	bsf	242,5,c	;volatile
   740  0012B4  0012               	return		;funcret
   741  0012B6                     __end_of_timerZero_Init:
   742                           	callstack 0
   743                           
   744 ;; *************** function _timerStart *****************
   745 ;; Defined at:
   746 ;;		line 124 in file "main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		None
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   760 ;;      Params:         0       0       0       0       0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used: 1
   766 ;; Hardware stack levels required when called: 3
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text2
   775  00130E                     __ptext2:
   776                           	callstack 0
   777  00130E                     _timerStart:
   778                           	callstack 27
   779  00130E                     
   780                           ;main.c: 126:     INTCONbits.TMR0IF = 0;
   781  00130E  94F2               	bcf	242,2,c	;volatile
   782                           
   783                           ;main.c: 127:     T0CONbits.TMR0ON = 1;
   784  001310  8ED5               	bsf	213,7,c	;volatile
   785                           
   786                           ;main.c: 128:     INTCONbits.TMR0IE = 1;
   787  001312  8AF2               	bsf	242,5,c	;volatile
   788  001314  0012               	return		;funcret
   789  001316                     __end_of_timerStart:
   790                           	callstack 0
   791                           
   792 ;; *************** function _UART_Init *****************
   793 ;; Defined at:
   794 ;;		line 5 in file "uart.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  baudRate        3   23[COMRAM] unsigned um
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  temp            2   30[COMRAM] unsigned short 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   808 ;;      Params:         3       0       0       0       0       0       0       0       0
   809 ;;      Locals:         2       0       0       0       0       0       0       0       0
   810 ;;      Temps:          4       0       0       0       0       0       0       0       0
   811 ;;      Totals:         9       0       0       0       0       0       0       0       0
   812 ;;Total ram usage:        9 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; Hardware stack levels required when called: 4
   815 ;; This function calls:
   816 ;;		___lldiv
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text3
   823  000846                     __ptext3:
   824                           	callstack 0
   825  000846                     _UART_Init:
   826                           	callstack 26
   827  000846                     
   828                           ;uart.c: 6:     _rx_buffer_head = 0;
   829  000846  0E00               	movlw	0
   830  000848  6E4E               	movwf	(__rx_buffer_head+1)^0,c	;volatile
   831  00084A  0E00               	movlw	0
   832  00084C  6E4D               	movwf	__rx_buffer_head^0,c	;volatile
   833                           
   834                           ;uart.c: 7:     _rx_buffer_tail = 0;
   835  00084E  0E00               	movlw	0
   836  000850  6E4C               	movwf	(__rx_buffer_tail+1)^0,c	;volatile
   837  000852  0E00               	movlw	0
   838  000854  6E4B               	movwf	__rx_buffer_tail^0,c	;volatile
   839                           
   840                           ;uart.c: 8:     _tx_buffer_head = 0;
   841  000856  0E00               	movlw	0
   842  000858  6E54               	movwf	__tx_buffer_head^0,c	;volatile
   843                           
   844                           ;uart.c: 9:     _tx_buffer_tail = 0;
   845  00085A  0E00               	movlw	0
   846  00085C  6E53               	movwf	__tx_buffer_tail^0,c	;volatile
   847                           
   848                           ;uart.c: 11:     TXSTA = 0b00100100;
   849  00085E  0E24               	movlw	36
   850  000860  6EAC               	movwf	172,c	;volatile
   851                           
   852                           ;uart.c: 12:     BAUDCON = 0b00001000;
   853  000862  0E08               	movlw	8
   854  000864  6EB8               	movwf	184,c	;volatile
   855  000866                     
   856                           ;uart.c: 14:     if(!(TXSTAbits.SYNC) && !(BAUDCONbits.BRG16) && !(TXSTAbits.BRGH))
   857  000866  B8AC               	btfsc	172,4,c	;volatile
   858  000868  EF38  F004         	goto	u1331
   859  00086C  EF3A  F004         	goto	u1330
   860  000870                     u1331:
   861  000870  EF6F  F004         	goto	l354
   862  000874                     u1330:
   863  000874  B6B8               	btfsc	184,3,c	;volatile
   864  000876  EF3F  F004         	goto	u1341
   865  00087A  EF41  F004         	goto	u1340
   866  00087E                     u1341:
   867  00087E  EF6F  F004         	goto	l354
   868  000882                     u1340:
   869  000882  B4AC               	btfsc	172,2,c	;volatile
   870  000884  EF46  F004         	goto	u1351
   871  000888  EF48  F004         	goto	u1350
   872  00088C                     u1351:
   873  00088C  EF6F  F004         	goto	l354
   874  000890                     u1350:
   875  000890                     
   876                           ;uart.c: 15:     {;uart.c: 16:         SPBRG = (uint8_t)((16000000UL) / (baudRate * 64))
      +                           - 1;
   877  000890  0E00               	movlw	0
   878  000892  6E0B               	movwf	___lldiv@dividend^0,c
   879  000894  0E24               	movlw	36
   880  000896  6E0C               	movwf	(___lldiv@dividend+1)^0,c
   881  000898  0EF4               	movlw	244
   882  00089A  6E0D               	movwf	(___lldiv@dividend+2)^0,c
   883  00089C  0E00               	movlw	0
   884  00089E  6E0E               	movwf	(___lldiv@dividend+3)^0,c
   885  0008A0  0E06               	movlw	6
   886  0008A2  6E1B               	movwf	??_UART_Init^0,c
   887  0008A4  C018  F01C         	movff	UART_Init@baudRate,??_UART_Init+1
   888  0008A8  C019  F01D         	movff	UART_Init@baudRate+1,??_UART_Init+2
   889  0008AC  C01A  F01E         	movff	UART_Init@baudRate+2,??_UART_Init+3
   890  0008B0  281B               	incf	??_UART_Init^0,w,c
   891  0008B2  EF5F  F004         	goto	u1360
   892  0008B6                     u1365:
   893  0008B6  90D8               	bcf	status,0,c
   894  0008B8  361C               	rlcf	(??_UART_Init+1)^0,f,c
   895  0008BA  361D               	rlcf	(??_UART_Init+2)^0,f,c
   896  0008BC  361E               	rlcf	(??_UART_Init+3)^0,f,c
   897  0008BE                     u1360:
   898  0008BE  2EE8               	decfsz	wreg,f,c
   899  0008C0  EF5B  F004         	goto	u1365
   900  0008C4  501C               	movf	(??_UART_Init+1)^0,w,c
   901  0008C6  6E0F               	movwf	___lldiv@divisor^0,c
   902  0008C8  501D               	movf	(??_UART_Init+2)^0,w,c
   903  0008CA  6E10               	movwf	(___lldiv@divisor+1)^0,c
   904  0008CC  501E               	movf	(??_UART_Init+3)^0,w,c
   905  0008CE  6E11               	movwf	(___lldiv@divisor+2)^0,c
   906  0008D0  6A12               	clrf	(___lldiv@divisor+3)^0,c
   907  0008D2  EC53  F006         	call	___lldiv	;wreg free
   908  0008D6  040B               	decf	?___lldiv^0,w,c
   909  0008D8  6EAF               	movwf	175,c	;volatile
   910                           
   911                           ;uart.c: 17:     }
   912  0008DA  EFF1  F004         	goto	l2278
   913  0008DE                     l354:
   914  0008DE  B8AC               	btfsc	172,4,c	;volatile
   915  0008E0  EF74  F004         	goto	u1371
   916  0008E4  EF76  F004         	goto	u1370
   917  0008E8                     u1371:
   918  0008E8  EFB2  F004         	goto	l356
   919  0008EC                     u1370:
   920  0008EC  B6B8               	btfsc	184,3,c	;volatile
   921  0008EE  EF7B  F004         	goto	u1381
   922  0008F2  EF7D  F004         	goto	u1380
   923  0008F6                     u1381:
   924  0008F6  EFB2  F004         	goto	l356
   925  0008FA                     u1380:
   926  0008FA  A4AC               	btfss	172,2,c	;volatile
   927  0008FC  EF82  F004         	goto	u1391
   928  000900  EF84  F004         	goto	u1390
   929  000904                     u1391:
   930  000904  EFB2  F004         	goto	l356
   931  000908                     u1390:
   932  000908                     
   933                           ;uart.c: 19:     {;uart.c: 20:         temp = (uint8_t)(((16000000UL) / (baudRate * 16))
      +                           - 1);
   934  000908  0E00               	movlw	0
   935  00090A  6E0B               	movwf	___lldiv@dividend^0,c
   936  00090C  0E24               	movlw	36
   937  00090E  6E0C               	movwf	(___lldiv@dividend+1)^0,c
   938  000910  0EF4               	movlw	244
   939  000912  6E0D               	movwf	(___lldiv@dividend+2)^0,c
   940  000914  0E00               	movlw	0
   941  000916  6E0E               	movwf	(___lldiv@dividend+3)^0,c
   942  000918  0E04               	movlw	4
   943  00091A  6E1B               	movwf	??_UART_Init^0,c
   944  00091C  C018  F01C         	movff	UART_Init@baudRate,??_UART_Init+1
   945  000920  C019  F01D         	movff	UART_Init@baudRate+1,??_UART_Init+2
   946  000924  C01A  F01E         	movff	UART_Init@baudRate+2,??_UART_Init+3
   947  000928  281B               	incf	??_UART_Init^0,w,c
   948  00092A  EF9B  F004         	goto	u1400
   949  00092E                     u1405:
   950  00092E  90D8               	bcf	status,0,c
   951  000930  361C               	rlcf	(??_UART_Init+1)^0,f,c
   952  000932  361D               	rlcf	(??_UART_Init+2)^0,f,c
   953  000934  361E               	rlcf	(??_UART_Init+3)^0,f,c
   954  000936                     u1400:
   955  000936  2EE8               	decfsz	wreg,f,c
   956  000938  EF97  F004         	goto	u1405
   957  00093C  501C               	movf	(??_UART_Init+1)^0,w,c
   958  00093E  6E0F               	movwf	___lldiv@divisor^0,c
   959  000940  501D               	movf	(??_UART_Init+2)^0,w,c
   960  000942  6E10               	movwf	(___lldiv@divisor+1)^0,c
   961  000944  501E               	movf	(??_UART_Init+3)^0,w,c
   962  000946  6E11               	movwf	(___lldiv@divisor+2)^0,c
   963  000948  6A12               	clrf	(___lldiv@divisor+3)^0,c
   964  00094A  EC53  F006         	call	___lldiv	;wreg free
   965  00094E  0EFF               	movlw	255
   966  000950  260B               	addwf	?___lldiv^0,f,c
   967  000952  500B               	movf	?___lldiv^0,w,c
   968  000954  6E1F               	movwf	UART_Init@temp^0,c
   969  000956  6A20               	clrf	(UART_Init@temp+1)^0,c
   970  000958                     l2264:
   971                           
   972                           ;uart.c: 21:         SPBRGH = (uint8_t)((temp & 0xFF00) >> 8);
   973  000958  5020               	movf	(UART_Init@temp+1)^0,w,c
   974  00095A  6EB0               	movwf	176,c	;volatile
   975  00095C                     
   976                           ;uart.c: 22:         SPBRG = (uint8_t) (temp & 0x00FF);
   977  00095C  C01F  FFAF         	movff	UART_Init@temp,4015	;volatile
   978                           
   979                           ;uart.c: 23:     }else if(!(TXSTAbits.SYNC) && (BAUDCONbits.BRG16) && (TXSTAbits.BRGH))
   980  000960  EFF1  F004         	goto	l2278
   981  000964                     l356:
   982  000964  B8AC               	btfsc	172,4,c	;volatile
   983  000966  EFB7  F004         	goto	u1411
   984  00096A  EFB9  F004         	goto	u1410
   985  00096E                     u1411:
   986  00096E  EFF1  F004         	goto	l2278
   987  000972                     u1410:
   988  000972  A6B8               	btfss	184,3,c	;volatile
   989  000974  EFBE  F004         	goto	u1421
   990  000978  EFC0  F004         	goto	u1420
   991  00097C                     u1421:
   992  00097C  EFF1  F004         	goto	l2278
   993  000980                     u1420:
   994  000980  A4AC               	btfss	172,2,c	;volatile
   995  000982  EFC5  F004         	goto	u1431
   996  000986  EFC7  F004         	goto	u1430
   997  00098A                     u1431:
   998  00098A  EFF1  F004         	goto	l2278
   999  00098E                     u1430:
  1000  00098E                     
  1001                           ;uart.c: 24:     {;uart.c: 25:         temp = (uint8_t)(((16000000UL) / (baudRate * 4)) 
      +                          - 1);
  1002  00098E  0E00               	movlw	0
  1003  000990  6E0B               	movwf	___lldiv@dividend^0,c
  1004  000992  0E24               	movlw	36
  1005  000994  6E0C               	movwf	(___lldiv@dividend+1)^0,c
  1006  000996  0EF4               	movlw	244
  1007  000998  6E0D               	movwf	(___lldiv@dividend+2)^0,c
  1008  00099A  0E00               	movlw	0
  1009  00099C  6E0E               	movwf	(___lldiv@dividend+3)^0,c
  1010  00099E  0E02               	movlw	2
  1011  0009A0  6E1B               	movwf	??_UART_Init^0,c
  1012  0009A2  C018  F01C         	movff	UART_Init@baudRate,??_UART_Init+1
  1013  0009A6  C019  F01D         	movff	UART_Init@baudRate+1,??_UART_Init+2
  1014  0009AA  C01A  F01E         	movff	UART_Init@baudRate+2,??_UART_Init+3
  1015  0009AE  281B               	incf	??_UART_Init^0,w,c
  1016  0009B0  EFDE  F004         	goto	u1440
  1017  0009B4                     u1445:
  1018  0009B4  90D8               	bcf	status,0,c
  1019  0009B6  361C               	rlcf	(??_UART_Init+1)^0,f,c
  1020  0009B8  361D               	rlcf	(??_UART_Init+2)^0,f,c
  1021  0009BA  361E               	rlcf	(??_UART_Init+3)^0,f,c
  1022  0009BC                     u1440:
  1023  0009BC  2EE8               	decfsz	wreg,f,c
  1024  0009BE  EFDA  F004         	goto	u1445
  1025  0009C2  501C               	movf	(??_UART_Init+1)^0,w,c
  1026  0009C4  6E0F               	movwf	___lldiv@divisor^0,c
  1027  0009C6  501D               	movf	(??_UART_Init+2)^0,w,c
  1028  0009C8  6E10               	movwf	(___lldiv@divisor+1)^0,c
  1029  0009CA  501E               	movf	(??_UART_Init+3)^0,w,c
  1030  0009CC  6E11               	movwf	(___lldiv@divisor+2)^0,c
  1031  0009CE  6A12               	clrf	(___lldiv@divisor+3)^0,c
  1032  0009D0  EC53  F006         	call	___lldiv	;wreg free
  1033  0009D4  0EFF               	movlw	255
  1034  0009D6  260B               	addwf	?___lldiv^0,f,c
  1035  0009D8  500B               	movf	?___lldiv^0,w,c
  1036  0009DA  6E1F               	movwf	UART_Init@temp^0,c
  1037  0009DC  6A20               	clrf	(UART_Init@temp+1)^0,c
  1038  0009DE  EFAC  F004         	goto	l2264
  1039  0009E2                     l2278:
  1040                           
  1041                           ;uart.c: 29:     RCSTA = 0b10010000;
  1042  0009E2  0E90               	movlw	144
  1043  0009E4  6EAB               	movwf	171,c	;volatile
  1044  0009E6                     
  1045                           ;uart.c: 35:     PIE1bits.RCIE = 1;
  1046  0009E6  8A9D               	bsf	157,5,c	;volatile
  1047  0009E8                     
  1048                           ;uart.c: 36:     IPR1bits.RCIP = 1;
  1049  0009E8  8A9F               	bsf	159,5,c	;volatile
  1050  0009EA                     
  1051                           ;uart.c: 37:     IPR1bits.TX1IP = 1;
  1052  0009EA  889F               	bsf	159,4,c	;volatile
  1053  0009EC  0012               	return		;funcret
  1054  0009EE                     __end_of_UART_Init:
  1055                           	callstack 0
  1056                           
  1057 ;; *************** function ___lldiv *****************
  1058 ;; Defined at:
  1059 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  dividend        4   10[COMRAM] unsigned long 
  1062 ;;  divisor         4   14[COMRAM] unsigned long 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  quotient        4   18[COMRAM] unsigned long 
  1065 ;;  counter         1   22[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  4   10[COMRAM] unsigned long 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1075 ;;      Params:         8       0       0       0       0       0       0       0       0
  1076 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1078 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1079 ;;Total ram usage:       13 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 3
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_UART_Init
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text4
  1090  000CA6                     __ptext4:
  1091                           	callstack 0
  1092  000CA6                     ___lldiv:
  1093                           	callstack 26
  1094  000CA6  0E00               	movlw	0
  1095  000CA8  6E13               	movwf	___lldiv@quotient^0,c
  1096  000CAA  0E00               	movlw	0
  1097  000CAC  6E14               	movwf	(___lldiv@quotient+1)^0,c
  1098  000CAE  0E00               	movlw	0
  1099  000CB0  6E15               	movwf	(___lldiv@quotient+2)^0,c
  1100  000CB2  0E00               	movlw	0
  1101  000CB4  6E16               	movwf	(___lldiv@quotient+3)^0,c
  1102  000CB6  500F               	movf	___lldiv@divisor^0,w,c
  1103  000CB8  1010               	iorwf	(___lldiv@divisor+1)^0,w,c
  1104  000CBA  1011               	iorwf	(___lldiv@divisor+2)^0,w,c
  1105  000CBC  1012               	iorwf	(___lldiv@divisor+3)^0,w,c
  1106  000CBE  B4D8               	btfsc	status,2,c
  1107  000CC0  EF64  F006         	goto	u1241
  1108  000CC4  EF66  F006         	goto	u1240
  1109  000CC8                     u1241:
  1110  000CC8  EF9C  F006         	goto	l441
  1111  000CCC                     u1240:
  1112  000CCC  0E01               	movlw	1
  1113  000CCE  6E17               	movwf	___lldiv@counter^0,c
  1114  000CD0  EF70  F006         	goto	l2134
  1115  000CD4                     l2132:
  1116  000CD4  90D8               	bcf	status,0,c
  1117  000CD6  360F               	rlcf	___lldiv@divisor^0,f,c
  1118  000CD8  3610               	rlcf	(___lldiv@divisor+1)^0,f,c
  1119  000CDA  3611               	rlcf	(___lldiv@divisor+2)^0,f,c
  1120  000CDC  3612               	rlcf	(___lldiv@divisor+3)^0,f,c
  1121  000CDE  2A17               	incf	___lldiv@counter^0,f,c
  1122  000CE0                     l2134:
  1123  000CE0  AE12               	btfss	(___lldiv@divisor+3)^0,7,c
  1124  000CE2  EF75  F006         	goto	u1251
  1125  000CE6  EF77  F006         	goto	u1250
  1126  000CEA                     u1251:
  1127  000CEA  EF6A  F006         	goto	l2132
  1128  000CEE                     u1250:
  1129  000CEE                     l2136:
  1130  000CEE  90D8               	bcf	status,0,c
  1131  000CF0  3613               	rlcf	___lldiv@quotient^0,f,c
  1132  000CF2  3614               	rlcf	(___lldiv@quotient+1)^0,f,c
  1133  000CF4  3615               	rlcf	(___lldiv@quotient+2)^0,f,c
  1134  000CF6  3616               	rlcf	(___lldiv@quotient+3)^0,f,c
  1135  000CF8  500F               	movf	___lldiv@divisor^0,w,c
  1136  000CFA  5C0B               	subwf	___lldiv@dividend^0,w,c
  1137  000CFC  5010               	movf	(___lldiv@divisor+1)^0,w,c
  1138  000CFE  580C               	subwfb	(___lldiv@dividend+1)^0,w,c
  1139  000D00  5011               	movf	(___lldiv@divisor+2)^0,w,c
  1140  000D02  580D               	subwfb	(___lldiv@dividend+2)^0,w,c
  1141  000D04  5012               	movf	(___lldiv@divisor+3)^0,w,c
  1142  000D06  580E               	subwfb	(___lldiv@dividend+3)^0,w,c
  1143  000D08  A0D8               	btfss	status,0,c
  1144  000D0A  EF89  F006         	goto	u1261
  1145  000D0E  EF8B  F006         	goto	u1260
  1146  000D12                     u1261:
  1147  000D12  EF94  F006         	goto	l2144
  1148  000D16                     u1260:
  1149  000D16  500F               	movf	___lldiv@divisor^0,w,c
  1150  000D18  5E0B               	subwf	___lldiv@dividend^0,f,c
  1151  000D1A  5010               	movf	(___lldiv@divisor+1)^0,w,c
  1152  000D1C  5A0C               	subwfb	(___lldiv@dividend+1)^0,f,c
  1153  000D1E  5011               	movf	(___lldiv@divisor+2)^0,w,c
  1154  000D20  5A0D               	subwfb	(___lldiv@dividend+2)^0,f,c
  1155  000D22  5012               	movf	(___lldiv@divisor+3)^0,w,c
  1156  000D24  5A0E               	subwfb	(___lldiv@dividend+3)^0,f,c
  1157  000D26  8013               	bsf	___lldiv@quotient^0,0,c
  1158  000D28                     l2144:
  1159  000D28  90D8               	bcf	status,0,c
  1160  000D2A  3212               	rrcf	(___lldiv@divisor+3)^0,f,c
  1161  000D2C  3211               	rrcf	(___lldiv@divisor+2)^0,f,c
  1162  000D2E  3210               	rrcf	(___lldiv@divisor+1)^0,f,c
  1163  000D30  320F               	rrcf	___lldiv@divisor^0,f,c
  1164  000D32  2E17               	decfsz	___lldiv@counter^0,f,c
  1165  000D34  EF77  F006         	goto	l2136
  1166  000D38                     l441:
  1167  000D38  C013  F00B         	movff	___lldiv@quotient,?___lldiv
  1168  000D3C  C014  F00C         	movff	___lldiv@quotient+1,?___lldiv+1
  1169  000D40  C015  F00D         	movff	___lldiv@quotient+2,?___lldiv+2
  1170  000D44  C016  F00E         	movff	___lldiv@quotient+3,?___lldiv+3
  1171  000D48  0012               	return		;funcret
  1172  000D4A                     __end_of___lldiv:
  1173                           	callstack 0
  1174                           
  1175 ;; *************** function _Ports_Init *****************
  1176 ;; Defined at:
  1177 ;;		line 147 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 3
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text5
  1206  001230                     __ptext5:
  1207                           	callstack 0
  1208  001230                     _Ports_Init:
  1209                           	callstack 27
  1210  001230                     
  1211                           ;main.c: 149:     ADCON1 = 0b00001111;
  1212  001230  0E0F               	movlw	15
  1213  001232  6EC1               	movwf	193,c	;volatile
  1214  001234                     
  1215                           ;main.c: 150:     TRISAbits.TRISA1 = 0;
  1216  001234  9292               	bcf	146,1,c	;volatile
  1217  001236                     
  1218                           ;main.c: 152:     TRISAbits.TRISA4 = 1;
  1219  001236  8892               	bsf	146,4,c	;volatile
  1220  001238                     
  1221                           ;main.c: 153:     TRISAbits.TRISA3 = 0;
  1222  001238  9692               	bcf	146,3,c	;volatile
  1223                           
  1224                           ;main.c: 155:     TRISD = 0x00;
  1225  00123A  0E00               	movlw	0
  1226  00123C  6E95               	movwf	149,c	;volatile
  1227                           
  1228                           ;main.c: 156:     LATD = 0x00;
  1229  00123E  0E00               	movlw	0
  1230  001240  6E8C               	movwf	140,c	;volatile
  1231  001242                     
  1232                           ;main.c: 158:     TRISCbits.RC0 = 0;
  1233  001242  9094               	bcf	148,0,c	;volatile
  1234  001244                     
  1235                           ;main.c: 159:     LATCbits.LATC0 = 0;
  1236  001244  908B               	bcf	139,0,c	;volatile
  1237  001246                     
  1238                           ;main.c: 163:     TRISCbits.TRISC2 = 1;
  1239  001246  8494               	bsf	148,2,c	;volatile
  1240  001248                     
  1241                           ;main.c: 165:     TRISAbits.TRISA3 = 1;
  1242  001248  8692               	bsf	146,3,c	;volatile
  1243  00124A                     
  1244                           ;main.c: 168:     INTCON2bits.INTEDG2 = 0;
  1245  00124A  98F1               	bcf	241,4,c	;volatile
  1246  00124C                     
  1247                           ;main.c: 170:     INTCON3bits.INT2IE = 1;
  1248  00124C  88F0               	bsf	240,4,c	;volatile
  1249  00124E                     
  1250                           ;main.c: 172:     INTCON3bits.INT2IP = 0;
  1251  00124E  9EF0               	bcf	240,7,c	;volatile
  1252  001250                     
  1253                           ;main.c: 173:     TRISBbits.TRISB2 = 1;
  1254  001250  8493               	bsf	147,2,c	;volatile
  1255  001252  0012               	return		;funcret
  1256  001254                     __end_of_Ports_Init:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _LCD_init *****************
  1260 ;; Defined at:
  1261 ;;		line 56 in file "LCD.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1277 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1278 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 4
  1282 ;; This function calls:
  1283 ;;		_LCD_send
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text6
  1290  000D4A                     __ptext6:
  1291                           	callstack 0
  1292  000D4A                     _LCD_init:
  1293                           	callstack 26
  1294  000D4A                     
  1295                           ;LCD.c: 58:     LATDbits.LATD5 = 0;
  1296  000D4A  9A8C               	bcf	140,5,c	;volatile
  1297  000D4C                     
  1298                           ;LCD.c: 59:     _delay((unsigned long)((15)*(16000000/4000.0)));
  1299  000D4C  0E4E               	movlw	78
  1300  000D4E  6E0E               	movwf	??_LCD_init^0,c
  1301  000D50  0EEB               	movlw	235
  1302  000D52                     u1577:
  1303  000D52  2EE8               	decfsz	wreg,f,c
  1304  000D54  D7FE               	bra	u1577
  1305  000D56  2E0E               	decfsz	??_LCD_init^0,f,c
  1306  000D58  D7FC               	bra	u1577
  1307  000D5A  F000               	nop	
  1308  000D5C                     
  1309                           ;LCD.c: 60:     LATD = 0x03;
  1310  000D5C  0E03               	movlw	3
  1311  000D5E  6E8C               	movwf	140,c	;volatile
  1312  000D60                     
  1313                           ;LCD.c: 61:     ((LATDbits.LATD4 = 1),(LATDbits.LATD4 = 0));
  1314  000D60  888C               	bsf	140,4,c	;volatile
  1315  000D62  988C               	bcf	140,4,c	;volatile
  1316  000D64                     
  1317                           ;LCD.c: 62:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1318  000D64  0E1A               	movlw	26
  1319  000D66  6E0E               	movwf	??_LCD_init^0,c
  1320  000D68  0EF8               	movlw	248
  1321  000D6A                     u1587:
  1322  000D6A  2EE8               	decfsz	wreg,f,c
  1323  000D6C  D7FE               	bra	u1587
  1324  000D6E  2E0E               	decfsz	??_LCD_init^0,f,c
  1325  000D70  D7FC               	bra	u1587
  1326  000D72  D000               	nop2	
  1327                           
  1328                           ;LCD.c: 64:     LATD = 0x03;
  1329  000D74  0E03               	movlw	3
  1330  000D76  6E8C               	movwf	140,c	;volatile
  1331  000D78                     
  1332                           ;LCD.c: 65:     ((LATDbits.LATD4 = 1),(LATDbits.LATD4 = 0));
  1333  000D78  888C               	bsf	140,4,c	;volatile
  1334  000D7A  988C               	bcf	140,4,c	;volatile
  1335  000D7C                     
  1336                           ;LCD.c: 66:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1337  000D7C  0E1A               	movlw	26
  1338  000D7E  6E0E               	movwf	??_LCD_init^0,c
  1339  000D80  0EF8               	movlw	248
  1340  000D82                     u1597:
  1341  000D82  2EE8               	decfsz	wreg,f,c
  1342  000D84  D7FE               	bra	u1597
  1343  000D86  2E0E               	decfsz	??_LCD_init^0,f,c
  1344  000D88  D7FC               	bra	u1597
  1345  000D8A  D000               	nop2	
  1346  000D8C                     
  1347                           ;LCD.c: 68:     LATD = 0x02;
  1348  000D8C  0E02               	movlw	2
  1349  000D8E  6E8C               	movwf	140,c	;volatile
  1350  000D90                     
  1351                           ;LCD.c: 69:     ((LATDbits.LATD4 = 1),(LATDbits.LATD4 = 0));
  1352  000D90  888C               	bsf	140,4,c	;volatile
  1353  000D92  988C               	bcf	140,4,c	;volatile
  1354                           
  1355                           ;LCD.c: 70:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1356  000D94  0E1A               	movlw	26
  1357  000D96  6E0E               	movwf	??_LCD_init^0,c
  1358  000D98  0EF8               	movlw	248
  1359  000D9A                     u1607:
  1360  000D9A  2EE8               	decfsz	wreg,f,c
  1361  000D9C  D7FE               	bra	u1607
  1362  000D9E  2E0E               	decfsz	??_LCD_init^0,f,c
  1363  000DA0  D7FC               	bra	u1607
  1364  000DA2  D000               	nop2	
  1365  000DA4                     
  1366                           ;LCD.c: 72:     LCD_send(0,0b00101100);
  1367  000DA4  0E2C               	movlw	44
  1368  000DA6  6E0B               	movwf	LCD_send@data^0,c
  1369  000DA8  0E00               	movlw	0
  1370  000DAA  EC4D  F008         	call	_LCD_send
  1371  000DAE                     
  1372                           ;LCD.c: 73:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1373  000DAE  0E1A               	movlw	26
  1374  000DB0  6E0E               	movwf	??_LCD_init^0,c
  1375  000DB2  0EF8               	movlw	248
  1376  000DB4                     u1617:
  1377  000DB4  2EE8               	decfsz	wreg,f,c
  1378  000DB6  D7FE               	bra	u1617
  1379  000DB8  2E0E               	decfsz	??_LCD_init^0,f,c
  1380  000DBA  D7FC               	bra	u1617
  1381  000DBC  D000               	nop2	
  1382                           
  1383                           ;LCD.c: 74:     LCD_send(0,0b00000001);
  1384  000DBE  0E01               	movlw	1
  1385  000DC0  6E0B               	movwf	LCD_send@data^0,c
  1386  000DC2  0E00               	movlw	0
  1387  000DC4  EC4D  F008         	call	_LCD_send
  1388  000DC8                     
  1389                           ;LCD.c: 75:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1390  000DC8  0E1A               	movlw	26
  1391  000DCA  6E0E               	movwf	??_LCD_init^0,c
  1392  000DCC  0EF8               	movlw	248
  1393  000DCE                     u1627:
  1394  000DCE  2EE8               	decfsz	wreg,f,c
  1395  000DD0  D7FE               	bra	u1627
  1396  000DD2  2E0E               	decfsz	??_LCD_init^0,f,c
  1397  000DD4  D7FC               	bra	u1627
  1398  000DD6  D000               	nop2	
  1399  000DD8                     
  1400                           ;LCD.c: 76:     LCD_send(0,0b00001100);
  1401  000DD8  0E0C               	movlw	12
  1402  000DDA  6E0B               	movwf	LCD_send@data^0,c
  1403  000DDC  0E00               	movlw	0
  1404  000DDE  EC4D  F008         	call	_LCD_send
  1405  000DE2  0012               	return		;funcret
  1406  000DE4                     __end_of_LCD_init:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _LCD_clear *****************
  1410 ;; Defined at:
  1411 ;;		line 83 in file "LCD.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         0       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1427 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1429 ;;Total ram usage:        1 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 4
  1432 ;; This function calls:
  1433 ;;		_LCD_send
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text7
  1440  001254                     __ptext7:
  1441                           	callstack 0
  1442  001254                     _LCD_clear:
  1443                           	callstack 26
  1444  001254                     
  1445                           ;LCD.c: 85:     LCD_send(0,0b00000001);
  1446  001254  0E01               	movlw	1
  1447  001256  6E0B               	movwf	LCD_send@data^0,c
  1448  001258  0E00               	movlw	0
  1449  00125A  EC4D  F008         	call	_LCD_send
  1450  00125E                     
  1451                           ;LCD.c: 86:     _delay((unsigned long)((2)*(16000000/4000.0)));
  1452  00125E  0E0B               	movlw	11
  1453  001260  6E0E               	movwf	??_LCD_clear^0,c
  1454  001262  0E62               	movlw	98
  1455  001264                     u1637:
  1456  001264  2EE8               	decfsz	wreg,f,c
  1457  001266  D7FE               	bra	u1637
  1458  001268  2E0E               	decfsz	??_LCD_clear^0,f,c
  1459  00126A  D7FC               	bra	u1637
  1460  00126C  D000               	nop2	
  1461  00126E  0012               	return		;funcret
  1462  001270                     __end_of_LCD_clear:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _Interrupt_Init *****************
  1466 ;; Defined at:
  1467 ;;		line 138 in file "main.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		None
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:         0       0       0       0       0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1484 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:        0 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 3
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text8
  1496  0012F2                     __ptext8:
  1497                           	callstack 0
  1498  0012F2                     _Interrupt_Init:
  1499                           	callstack 27
  1500  0012F2                     
  1501                           ;main.c: 139:     INTCONbits.GIE = 1;
  1502  0012F2  8EF2               	bsf	242,7,c	;volatile
  1503                           
  1504                           ;main.c: 140:     INTCONbits.GIEH = 1;
  1505  0012F4  8EF2               	bsf	242,7,c	;volatile
  1506                           
  1507                           ;main.c: 141:     INTCONbits.GIEL = 1;
  1508  0012F6  8CF2               	bsf	242,6,c	;volatile
  1509                           
  1510                           ;main.c: 142:     INTCONbits.PEIE = 1;
  1511  0012F8  8CF2               	bsf	242,6,c	;volatile
  1512                           
  1513                           ;main.c: 143:     INTCONbits.PEIE_GIEL = 1;
  1514  0012FA  8CF2               	bsf	242,6,c	;volatile
  1515                           
  1516                           ;main.c: 144:     RCONbits.IPEN = 1;
  1517  0012FC  8ED0               	bsf	208,7,c	;volatile
  1518  0012FE  0012               	return		;funcret
  1519  001300                     __end_of_Interrupt_Init:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _I2C_INTIALIZE *****************
  1523 ;; Defined at:
  1524 ;;		line 15 in file "I2C.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  clock           3   24[COMRAM] unsigned um
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         3       0       0       0       0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1540 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        7 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 4
  1545 ;; This function calls:
  1546 ;;		___aldiv
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text9
  1553  000FEC                     __ptext9:
  1554                           	callstack 0
  1555  000FEC                     _I2C_INTIALIZE:
  1556                           	callstack 26
  1557  000FEC                     
  1558                           ;I2C.c: 16:     TRISBbits.RB0 = 1;
  1559  000FEC  8093               	bsf	147,0,c	;volatile
  1560                           
  1561                           ;I2C.c: 17:     TRISBbits.RB1 = 1;
  1562  000FEE  8293               	bsf	147,1,c	;volatile
  1563                           
  1564                           ;I2C.c: 18:     SSPSTATbits.SMP = 1;
  1565  000FF0  8EC7               	bsf	199,7,c	;volatile
  1566                           
  1567                           ;I2C.c: 19:     SSPSTATbits.CKE = 0;
  1568  000FF2  9CC7               	bcf	199,6,c	;volatile
  1569  000FF4                     
  1570                           ;I2C.c: 21:     SSPCON1 |= 0x28;
  1571  000FF4  0E28               	movlw	40
  1572  000FF6  12C6               	iorwf	198,f,c	;volatile
  1573  000FF8                     
  1574                           ;I2C.c: 22:     SSPCON2 |= 0x00;
  1575  000FF8  50C5               	movf	197,w,c	;volatile
  1576  000FFA                     
  1577                           ;I2C.c: 23:     SSPADD = (uint8_t)(16000000 / (clock * 4)) - 1;
  1578  000FFA  0E00               	movlw	0
  1579  000FFC  6E0B               	movwf	___aldiv@dividend^0,c
  1580  000FFE  0E24               	movlw	36
  1581  001000  6E0C               	movwf	(___aldiv@dividend+1)^0,c
  1582  001002  0EF4               	movlw	244
  1583  001004  6E0D               	movwf	(___aldiv@dividend+2)^0,c
  1584  001006  0E00               	movlw	0
  1585  001008  6E0E               	movwf	(___aldiv@dividend+3)^0,c
  1586  00100A  0E02               	movlw	2
  1587  00100C  6E1C               	movwf	??_I2C_INTIALIZE^0,c
  1588  00100E  C019  F01D         	movff	I2C_INTIALIZE@clock,??_I2C_INTIALIZE+1
  1589  001012  C01A  F01E         	movff	I2C_INTIALIZE@clock+1,??_I2C_INTIALIZE+2
  1590  001016  C01B  F01F         	movff	I2C_INTIALIZE@clock+2,??_I2C_INTIALIZE+3
  1591  00101A  281C               	incf	??_I2C_INTIALIZE^0,w,c
  1592  00101C  EF14  F008         	goto	u1450
  1593  001020                     u1455:
  1594  001020  90D8               	bcf	status,0,c
  1595  001022  361D               	rlcf	(??_I2C_INTIALIZE+1)^0,f,c
  1596  001024  361E               	rlcf	(??_I2C_INTIALIZE+2)^0,f,c
  1597  001026  361F               	rlcf	(??_I2C_INTIALIZE+3)^0,f,c
  1598  001028                     u1450:
  1599  001028  2EE8               	decfsz	wreg,f,c
  1600  00102A  EF10  F008         	goto	u1455
  1601  00102E  501D               	movf	(??_I2C_INTIALIZE+1)^0,w,c
  1602  001030  6E0F               	movwf	___aldiv@divisor^0,c
  1603  001032  501E               	movf	(??_I2C_INTIALIZE+2)^0,w,c
  1604  001034  6E10               	movwf	(___aldiv@divisor+1)^0,c
  1605  001036  501F               	movf	(??_I2C_INTIALIZE+3)^0,w,c
  1606  001038  6E11               	movwf	(___aldiv@divisor+2)^0,c
  1607  00103A  6A12               	clrf	(___aldiv@divisor+3)^0,c
  1608  00103C  ECF7  F004         	call	___aldiv	;wreg free
  1609  001040  040B               	decf	?___aldiv^0,w,c
  1610  001042  6EC8               	movwf	200,c	;volatile
  1611  001044  0012               	return		;funcret
  1612  001046                     __end_of_I2C_INTIALIZE:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function ___aldiv *****************
  1616 ;; Defined at:
  1617 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  dividend        4   10[COMRAM] long 
  1620 ;;  divisor         4   14[COMRAM] long 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  quotient        4   20[COMRAM] long 
  1623 ;;  sign            1   19[COMRAM] unsigned char 
  1624 ;;  counter         1   18[COMRAM] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  4   10[COMRAM] long 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1634 ;;      Params:         8       0       0       0       0       0       0       0       0
  1635 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1637 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1638 ;;Total ram usage:       14 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 3
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_I2C_INTIALIZE
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text10
  1649  0009EE                     __ptext10:
  1650                           	callstack 0
  1651  0009EE                     ___aldiv:
  1652                           	callstack 26
  1653  0009EE  0E00               	movlw	0
  1654  0009F0  6E14               	movwf	___aldiv@sign^0,c
  1655  0009F2  BE12               	btfsc	(___aldiv@divisor+3)^0,7,c
  1656  0009F4  EF00  F005         	goto	u1270
  1657  0009F8  EFFE  F004         	goto	u1271
  1658  0009FC                     u1271:
  1659  0009FC  EF0A  F005         	goto	l2156
  1660  000A00                     u1270:
  1661  000A00  1E12               	comf	(___aldiv@divisor+3)^0,f,c
  1662  000A02  1E11               	comf	(___aldiv@divisor+2)^0,f,c
  1663  000A04  1E10               	comf	(___aldiv@divisor+1)^0,f,c
  1664  000A06  6C0F               	negf	___aldiv@divisor^0,c
  1665  000A08  0E00               	movlw	0
  1666  000A0A  2210               	addwfc	(___aldiv@divisor+1)^0,f,c
  1667  000A0C  2211               	addwfc	(___aldiv@divisor+2)^0,f,c
  1668  000A0E  2212               	addwfc	(___aldiv@divisor+3)^0,f,c
  1669  000A10  0E01               	movlw	1
  1670  000A12  6E14               	movwf	___aldiv@sign^0,c
  1671  000A14                     l2156:
  1672  000A14  BE0E               	btfsc	(___aldiv@dividend+3)^0,7,c
  1673  000A16  EF11  F005         	goto	u1280
  1674  000A1A  EF0F  F005         	goto	u1281
  1675  000A1E                     u1281:
  1676  000A1E  EF1B  F005         	goto	l2162
  1677  000A22                     u1280:
  1678  000A22  1E0E               	comf	(___aldiv@dividend+3)^0,f,c
  1679  000A24  1E0D               	comf	(___aldiv@dividend+2)^0,f,c
  1680  000A26  1E0C               	comf	(___aldiv@dividend+1)^0,f,c
  1681  000A28  6C0B               	negf	___aldiv@dividend^0,c
  1682  000A2A  0E00               	movlw	0
  1683  000A2C  220C               	addwfc	(___aldiv@dividend+1)^0,f,c
  1684  000A2E  220D               	addwfc	(___aldiv@dividend+2)^0,f,c
  1685  000A30  220E               	addwfc	(___aldiv@dividend+3)^0,f,c
  1686  000A32  0E01               	movlw	1
  1687  000A34  1A14               	xorwf	___aldiv@sign^0,f,c
  1688  000A36                     l2162:
  1689  000A36  0E00               	movlw	0
  1690  000A38  6E15               	movwf	___aldiv@quotient^0,c
  1691  000A3A  0E00               	movlw	0
  1692  000A3C  6E16               	movwf	(___aldiv@quotient+1)^0,c
  1693  000A3E  0E00               	movlw	0
  1694  000A40  6E17               	movwf	(___aldiv@quotient+2)^0,c
  1695  000A42  0E00               	movlw	0
  1696  000A44  6E18               	movwf	(___aldiv@quotient+3)^0,c
  1697  000A46  500F               	movf	___aldiv@divisor^0,w,c
  1698  000A48  1010               	iorwf	(___aldiv@divisor+1)^0,w,c
  1699  000A4A  1011               	iorwf	(___aldiv@divisor+2)^0,w,c
  1700  000A4C  1012               	iorwf	(___aldiv@divisor+3)^0,w,c
  1701  000A4E  B4D8               	btfsc	status,2,c
  1702  000A50  EF2C  F005         	goto	u1291
  1703  000A54  EF2E  F005         	goto	u1290
  1704  000A58                     u1291:
  1705  000A58  EF64  F005         	goto	l2184
  1706  000A5C                     u1290:
  1707  000A5C  0E01               	movlw	1
  1708  000A5E  6E13               	movwf	___aldiv@counter^0,c
  1709  000A60  EF38  F005         	goto	l2170
  1710  000A64                     l2168:
  1711  000A64  90D8               	bcf	status,0,c
  1712  000A66  360F               	rlcf	___aldiv@divisor^0,f,c
  1713  000A68  3610               	rlcf	(___aldiv@divisor+1)^0,f,c
  1714  000A6A  3611               	rlcf	(___aldiv@divisor+2)^0,f,c
  1715  000A6C  3612               	rlcf	(___aldiv@divisor+3)^0,f,c
  1716  000A6E  2A13               	incf	___aldiv@counter^0,f,c
  1717  000A70                     l2170:
  1718  000A70  AE12               	btfss	(___aldiv@divisor+3)^0,7,c
  1719  000A72  EF3D  F005         	goto	u1301
  1720  000A76  EF3F  F005         	goto	u1300
  1721  000A7A                     u1301:
  1722  000A7A  EF32  F005         	goto	l2168
  1723  000A7E                     u1300:
  1724  000A7E                     l2172:
  1725  000A7E  90D8               	bcf	status,0,c
  1726  000A80  3615               	rlcf	___aldiv@quotient^0,f,c
  1727  000A82  3616               	rlcf	(___aldiv@quotient+1)^0,f,c
  1728  000A84  3617               	rlcf	(___aldiv@quotient+2)^0,f,c
  1729  000A86  3618               	rlcf	(___aldiv@quotient+3)^0,f,c
  1730  000A88  500F               	movf	___aldiv@divisor^0,w,c
  1731  000A8A  5C0B               	subwf	___aldiv@dividend^0,w,c
  1732  000A8C  5010               	movf	(___aldiv@divisor+1)^0,w,c
  1733  000A8E  580C               	subwfb	(___aldiv@dividend+1)^0,w,c
  1734  000A90  5011               	movf	(___aldiv@divisor+2)^0,w,c
  1735  000A92  580D               	subwfb	(___aldiv@dividend+2)^0,w,c
  1736  000A94  5012               	movf	(___aldiv@divisor+3)^0,w,c
  1737  000A96  580E               	subwfb	(___aldiv@dividend+3)^0,w,c
  1738  000A98  A0D8               	btfss	status,0,c
  1739  000A9A  EF51  F005         	goto	u1311
  1740  000A9E  EF53  F005         	goto	u1310
  1741  000AA2                     u1311:
  1742  000AA2  EF5C  F005         	goto	l2180
  1743  000AA6                     u1310:
  1744  000AA6  500F               	movf	___aldiv@divisor^0,w,c
  1745  000AA8  5E0B               	subwf	___aldiv@dividend^0,f,c
  1746  000AAA  5010               	movf	(___aldiv@divisor+1)^0,w,c
  1747  000AAC  5A0C               	subwfb	(___aldiv@dividend+1)^0,f,c
  1748  000AAE  5011               	movf	(___aldiv@divisor+2)^0,w,c
  1749  000AB0  5A0D               	subwfb	(___aldiv@dividend+2)^0,f,c
  1750  000AB2  5012               	movf	(___aldiv@divisor+3)^0,w,c
  1751  000AB4  5A0E               	subwfb	(___aldiv@dividend+3)^0,f,c
  1752  000AB6  8015               	bsf	___aldiv@quotient^0,0,c
  1753  000AB8                     l2180:
  1754  000AB8  90D8               	bcf	status,0,c
  1755  000ABA  3212               	rrcf	(___aldiv@divisor+3)^0,f,c
  1756  000ABC  3211               	rrcf	(___aldiv@divisor+2)^0,f,c
  1757  000ABE  3210               	rrcf	(___aldiv@divisor+1)^0,f,c
  1758  000AC0  320F               	rrcf	___aldiv@divisor^0,f,c
  1759  000AC2  2E13               	decfsz	___aldiv@counter^0,f,c
  1760  000AC4  EF3F  F005         	goto	l2172
  1761  000AC8                     l2184:
  1762  000AC8  5014               	movf	___aldiv@sign^0,w,c
  1763  000ACA  B4D8               	btfsc	status,2,c
  1764  000ACC  EF6A  F005         	goto	u1321
  1765  000AD0  EF6C  F005         	goto	u1320
  1766  000AD4                     u1321:
  1767  000AD4  EF74  F005         	goto	l2188
  1768  000AD8                     u1320:
  1769  000AD8  1E18               	comf	(___aldiv@quotient+3)^0,f,c
  1770  000ADA  1E17               	comf	(___aldiv@quotient+2)^0,f,c
  1771  000ADC  1E16               	comf	(___aldiv@quotient+1)^0,f,c
  1772  000ADE  6C15               	negf	___aldiv@quotient^0,c
  1773  000AE0  0E00               	movlw	0
  1774  000AE2  2216               	addwfc	(___aldiv@quotient+1)^0,f,c
  1775  000AE4  2217               	addwfc	(___aldiv@quotient+2)^0,f,c
  1776  000AE6  2218               	addwfc	(___aldiv@quotient+3)^0,f,c
  1777  000AE8                     l2188:
  1778  000AE8  C015  F00B         	movff	___aldiv@quotient,?___aldiv
  1779  000AEC  C016  F00C         	movff	___aldiv@quotient+1,?___aldiv+1
  1780  000AF0  C017  F00D         	movff	___aldiv@quotient+2,?___aldiv+2
  1781  000AF4  C018  F00E         	movff	___aldiv@quotient+3,?___aldiv+3
  1782  000AF8  0012               	return		;funcret
  1783  000AFA                     __end_of___aldiv:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _Enable_Interrupt *****************
  1787 ;; Defined at:
  1788 ;;		line 176 in file "main.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		None
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1802 ;;      Params:         0       0       0       0       0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 3
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text11
  1817  001316                     __ptext11:
  1818                           	callstack 0
  1819  001316                     _Enable_Interrupt:
  1820                           	callstack 27
  1821  001316                     
  1822                           ;main.c: 178:     INTCONbits.GIE = 1;
  1823  001316  8EF2               	bsf	242,7,c	;volatile
  1824                           
  1825                           ;main.c: 179:     INTCONbits.PEIE = 1;
  1826  001318  8CF2               	bsf	242,6,c	;volatile
  1827  00131A  0012               	return		;funcret
  1828  00131C                     __end_of_Enable_Interrupt:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _DS1307_read *****************
  1832 ;; Defined at:
  1833 ;;		line 41 in file "DS1307.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  myTime          2   11[COMRAM] PTR struct .
  1836 ;;		 -> main@now(7), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1848 ;;      Params:         2       0       0       0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1851 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1852 ;;Total ram usage:        2 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 4
  1855 ;; This function calls:
  1856 ;;		_i2c_RS
  1857 ;;		_i2c_read
  1858 ;;		_i2c_start
  1859 ;;		_i2c_stop
  1860 ;;		_i2c_write
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text12
  1867  000BFE                     __ptext12:
  1868                           	callstack 0
  1869  000BFE                     _DS1307_read:
  1870                           	callstack 26
  1871  000BFE                     
  1872                           ;DS1307.c: 42:     i2c_start();
  1873  000BFE  EC65  F009         	call	_i2c_start	;wreg free
  1874  000C02                     
  1875                           ;DS1307.c: 44:     i2c_write(0xD0);
  1876  000C02  0ED0               	movlw	208
  1877  000C04  EC45  F009         	call	_i2c_write
  1878  000C08                     
  1879                           ;DS1307.c: 46:     i2c_write(0x00);
  1880  000C08  0E00               	movlw	0
  1881  000C0A  EC45  F009         	call	_i2c_write
  1882                           
  1883                           ;DS1307.c: 48:     i2c_RS();
  1884  000C0E  EC6F  F009         	call	_i2c_RS	;wreg free
  1885  000C12                     
  1886                           ;DS1307.c: 50:     i2c_write(0xD1);
  1887  000C12  0ED1               	movlw	209
  1888  000C14  EC45  F009         	call	_i2c_write
  1889  000C18                     
  1890                           ;DS1307.c: 52:     myTime->seconds = i2c_read(0);
  1891  000C18  0E00               	movlw	0
  1892  000C1A  ECA2  F008         	call	_i2c_read
  1893  000C1E  C00C  FFD9         	movff	DS1307_read@myTime,fsr2l
  1894  000C22  C00D  FFDA         	movff	DS1307_read@myTime+1,fsr2h
  1895  000C26  6EDF               	movwf	indf2,c
  1896  000C28                     
  1897                           ;DS1307.c: 54:     myTime->minutes = i2c_read(0);
  1898  000C28  EE20 F001          	lfsr	2,1
  1899  000C2C  500C               	movf	DS1307_read@myTime^0,w,c
  1900  000C2E  26D9               	addwf	fsr2l,f,c
  1901  000C30  500D               	movf	(DS1307_read@myTime+1)^0,w,c
  1902  000C32  22DA               	addwfc	fsr2h,f,c
  1903  000C34  0E00               	movlw	0
  1904  000C36  ECA2  F008         	call	_i2c_read
  1905  000C3A  6EDF               	movwf	indf2,c
  1906  000C3C                     
  1907                           ;DS1307.c: 56:     myTime->hours = i2c_read(0);
  1908  000C3C  EE20 F002          	lfsr	2,2
  1909  000C40  500C               	movf	DS1307_read@myTime^0,w,c
  1910  000C42  26D9               	addwf	fsr2l,f,c
  1911  000C44  500D               	movf	(DS1307_read@myTime+1)^0,w,c
  1912  000C46  22DA               	addwfc	fsr2h,f,c
  1913  000C48  0E00               	movlw	0
  1914  000C4A  ECA2  F008         	call	_i2c_read
  1915  000C4E  6EDF               	movwf	indf2,c
  1916  000C50                     
  1917                           ;DS1307.c: 58:     myTime->day = i2c_read(0);
  1918  000C50  EE20 F003          	lfsr	2,3
  1919  000C54  500C               	movf	DS1307_read@myTime^0,w,c
  1920  000C56  26D9               	addwf	fsr2l,f,c
  1921  000C58  500D               	movf	(DS1307_read@myTime+1)^0,w,c
  1922  000C5A  22DA               	addwfc	fsr2h,f,c
  1923  000C5C  0E00               	movlw	0
  1924  000C5E  ECA2  F008         	call	_i2c_read
  1925  000C62  6EDF               	movwf	indf2,c
  1926  000C64                     
  1927                           ;DS1307.c: 60:     myTime->date = i2c_read(0);
  1928  000C64  EE20 F004          	lfsr	2,4
  1929  000C68  500C               	movf	DS1307_read@myTime^0,w,c
  1930  000C6A  26D9               	addwf	fsr2l,f,c
  1931  000C6C  500D               	movf	(DS1307_read@myTime+1)^0,w,c
  1932  000C6E  22DA               	addwfc	fsr2h,f,c
  1933  000C70  0E00               	movlw	0
  1934  000C72  ECA2  F008         	call	_i2c_read
  1935  000C76  6EDF               	movwf	indf2,c
  1936  000C78                     
  1937                           ;DS1307.c: 62:     myTime->month = i2c_read(0);
  1938  000C78  EE20 F005          	lfsr	2,5
  1939  000C7C  500C               	movf	DS1307_read@myTime^0,w,c
  1940  000C7E  26D9               	addwf	fsr2l,f,c
  1941  000C80  500D               	movf	(DS1307_read@myTime+1)^0,w,c
  1942  000C82  22DA               	addwfc	fsr2h,f,c
  1943  000C84  0E00               	movlw	0
  1944  000C86  ECA2  F008         	call	_i2c_read
  1945  000C8A  6EDF               	movwf	indf2,c
  1946  000C8C                     
  1947                           ;DS1307.c: 64:     myTime->year = i2c_read(1);
  1948  000C8C  EE20 F006          	lfsr	2,6
  1949  000C90  500C               	movf	DS1307_read@myTime^0,w,c
  1950  000C92  26D9               	addwf	fsr2l,f,c
  1951  000C94  500D               	movf	(DS1307_read@myTime+1)^0,w,c
  1952  000C96  22DA               	addwfc	fsr2h,f,c
  1953  000C98  0E01               	movlw	1
  1954  000C9A  ECA2  F008         	call	_i2c_read
  1955  000C9E  6EDF               	movwf	indf2,c
  1956  000CA0                     
  1957                           ;DS1307.c: 66:     i2c_stop();
  1958  000CA0  EC5B  F009         	call	_i2c_stop	;wreg free
  1959  000CA4  0012               	return		;funcret
  1960  000CA6                     __end_of_DS1307_read:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _i2c_write *****************
  1964 ;; Defined at:
  1965 ;;		line 55 in file "I2C.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  data            1    wreg     unsigned char 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  data            1   10[COMRAM] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0
  1980 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1982 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1983 ;;Total ram usage:        1 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 3
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_DS1307_read
  1990 ;;		_DS1307_write
  1991 ;;		_i2c_scanBus
  1992 ;;		_i2c_clrBuf
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text13
  1997  00128A                     __ptext13:
  1998                           	callstack 0
  1999  00128A                     _i2c_write:
  2000                           	callstack 26
  2001                           
  2002                           ;incstack = 0
  2003                           ;i2c_write@data stored from wreg
  2004  00128A  6E0B               	movwf	i2c_write@data^0,c
  2005  00128C                     
  2006                           ;I2C.c: 55: void i2c_write(uint8_t data);I2C.c: 56: {;I2C.c: 57:     SSPBUF = data;
  2007  00128C  C00B  FFC9         	movff	i2c_write@data,4041	;volatile
  2008  001290                     l250:
  2009  001290  A69E               	btfss	158,3,c	;volatile
  2010  001292  EF4D  F009         	goto	u1111
  2011  001296  EF4F  F009         	goto	u1110
  2012  00129A                     u1111:
  2013  00129A  EF48  F009         	goto	l250
  2014  00129E                     u1110:
  2015  00129E                     
  2016                           ;I2C.c: 59:     PIR1bits.SSPIF = 0;
  2017  00129E  969E               	bcf	158,3,c	;volatile
  2018  0012A0  0012               	return		;funcret
  2019  0012A2                     __end_of_i2c_write:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _i2c_stop *****************
  2023 ;; Defined at:
  2024 ;;		line 32 in file "I2C.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		None
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 3
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_DS1307_read
  2049 ;;		_DS1307_write
  2050 ;;		_i2c_scanBus
  2051 ;;		_i2c_clrBuf
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text14
  2056  0012B6                     __ptext14:
  2057                           	callstack 0
  2058  0012B6                     _i2c_stop:
  2059                           	callstack 26
  2060  0012B6                     
  2061                           ;I2C.c: 33:     SSPCON2bits.PEN = 1;
  2062  0012B6  84C5               	bsf	197,2,c	;volatile
  2063  0012B8                     l229:
  2064  0012B8  B4C5               	btfsc	197,2,c	;volatile
  2065  0012BA  EF61  F009         	goto	u1121
  2066  0012BE  EF63  F009         	goto	u1120
  2067  0012C2                     u1121:
  2068  0012C2  EF5C  F009         	goto	l229
  2069  0012C6                     u1120:
  2070  0012C6                     
  2071                           ;I2C.c: 35:     PIR1bits.SSPIF = 0;
  2072  0012C6  969E               	bcf	158,3,c	;volatile
  2073  0012C8  0012               	return		;funcret
  2074  0012CA                     __end_of_i2c_stop:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _i2c_start *****************
  2078 ;; Defined at:
  2079 ;;		line 26 in file "I2C.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		None
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 3
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_DS1307_read
  2104 ;;		_DS1307_write
  2105 ;;		_i2c_scanBus
  2106 ;;		_i2c_clrBuf
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text15
  2111  0012CA                     __ptext15:
  2112                           	callstack 0
  2113  0012CA                     _i2c_start:
  2114                           	callstack 26
  2115  0012CA                     
  2116                           ;I2C.c: 27:     SSPCON2bits.SEN = 1;
  2117  0012CA  80C5               	bsf	197,0,c	;volatile
  2118  0012CC                     l223:
  2119  0012CC  B0C5               	btfsc	197,0,c	;volatile
  2120  0012CE  EF6B  F009         	goto	u1101
  2121  0012D2  EF6D  F009         	goto	u1100
  2122  0012D6                     u1101:
  2123  0012D6  EF66  F009         	goto	l223
  2124  0012DA                     u1100:
  2125  0012DA                     
  2126                           ;I2C.c: 29:     PIR1bits.SSPIF = 0;
  2127  0012DA  969E               	bcf	158,3,c	;volatile
  2128  0012DC  0012               	return		;funcret
  2129  0012DE                     __end_of_i2c_start:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _i2c_read *****************
  2133 ;; Defined at:
  2134 ;;		line 44 in file "I2C.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  ACK_NACK        1    wreg     unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  ACK_NACK        1   10[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      unsigned char 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0
  2149 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2151 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2152 ;;Total ram usage:        1 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 3
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_DS1307_read
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text16
  2163  001144                     __ptext16:
  2164                           	callstack 0
  2165  001144                     _i2c_read:
  2166                           	callstack 26
  2167                           
  2168                           ;incstack = 0
  2169                           ;i2c_read@ACK_NACK stored from wreg
  2170  001144  6E0B               	movwf	i2c_read@ACK_NACK^0,c
  2171  001146                     
  2172                           ;I2C.c: 44: char i2c_read(uint8_t ACK_NACK);I2C.c: 45: {;I2C.c: 46:     SSPSTATbits.BF =
      +                           0;
  2173  001146  90C7               	bcf	199,0,c	;volatile
  2174                           
  2175                           ;I2C.c: 47:     SSPCON2bits.RCEN = 1;
  2176  001148  86C5               	bsf	197,3,c	;volatile
  2177  00114A                     l241:
  2178  00114A  A0C7               	btfss	199,0,c	;volatile
  2179  00114C  EFAA  F008         	goto	u1141
  2180  001150  EFAC  F008         	goto	u1140
  2181  001154                     u1141:
  2182  001154  EFA5  F008         	goto	l241
  2183  001158                     u1140:
  2184  001158                     
  2185                           ;I2C.c: 49:     SSPCON2bits.ACKDT = ACK_NACK;
  2186  001158  B00B               	btfsc	i2c_read@ACK_NACK^0,0,c
  2187  00115A  D002               	bra	u1155
  2188  00115C  9AC5               	bcf	197,5,c	;volatile
  2189  00115E  D001               	bra	u1156
  2190  001160                     u1155:
  2191  001160  8AC5               	bsf	197,5,c	;volatile
  2192  001162                     u1156:
  2193  001162                     
  2194                           ;I2C.c: 50:     SSPCON2bits.ACKEN = 1;
  2195  001162  88C5               	bsf	197,4,c	;volatile
  2196  001164                     l244:
  2197  001164  B8C5               	btfsc	197,4,c	;volatile
  2198  001166  EFB7  F008         	goto	u1161
  2199  00116A  EFB9  F008         	goto	u1160
  2200  00116E                     u1161:
  2201  00116E  EFB2  F008         	goto	l244
  2202  001172                     u1160:
  2203  001172                     
  2204                           ;I2C.c: 52:     return SSPBUF;
  2205  001172  50C9               	movf	201,w,c	;volatile
  2206  001174  0012               	return		;funcret
  2207  001176                     __end_of_i2c_read:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _i2c_RS *****************
  2211 ;; Defined at:
  2212 ;;		line 38 in file "I2C.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		None
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 3
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_DS1307_read
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text17
  2241  0012DE                     __ptext17:
  2242                           	callstack 0
  2243  0012DE                     _i2c_RS:
  2244                           	callstack 26
  2245  0012DE                     
  2246                           ;I2C.c: 39:     SSPCON2bits.RSEN = 1;
  2247  0012DE  82C5               	bsf	197,1,c	;volatile
  2248  0012E0                     l235:
  2249  0012E0  B2C5               	btfsc	197,1,c	;volatile
  2250  0012E2  EF75  F009         	goto	u1131
  2251  0012E6  EF77  F009         	goto	u1130
  2252  0012EA                     u1131:
  2253  0012EA  EF70  F009         	goto	l235
  2254  0012EE                     u1130:
  2255  0012EE                     
  2256                           ;I2C.c: 41:     PIR1bits.SSPIF = 0;
  2257  0012EE  969E               	bcf	158,3,c	;volatile
  2258  0012F0  0012               	return		;funcret
  2259  0012F2                     __end_of_i2c_RS:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _DS1307_Display_UART *****************
  2263 ;; Defined at:
  2264 ;;		line 69 in file "DS1307.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  myTime          7   16[COMRAM] struct .
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  dateStr        13   25[COMRAM] unsigned char [13]
  2269 ;;  timeStr        11   38[COMRAM] unsigned char [11]
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2279 ;;      Params:         7       0       0       0       0       0       0       0       0
  2280 ;;      Locals:        24       0       0       0       0       0       0       0       0
  2281 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2282 ;;      Totals:        33       0       0       0       0       0       0       0       0
  2283 ;;Total ram usage:       33 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 5
  2286 ;; This function calls:
  2287 ;;		_BCD_to_ASCII
  2288 ;;		_LCD_goto
  2289 ;;		_LCD_putrs
  2290 ;;		_LCD_puts
  2291 ;;		_UART_puts
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text18
  2298  000AFA                     __ptext18:
  2299                           	callstack 0
  2300  000AFA                     _DS1307_Display_UART:
  2301                           	callstack 25
  2302  000AFA                     
  2303                           ;DS1307.c: 70:     uint8_t timeStr[11] = "00:00:00";
  2304  000AFA  EE20  F040         	lfsr	2,DS1307_Display_UART@F3235
  2305  000AFE  EE10  F027         	lfsr	1,DS1307_Display_UART@timeStr
  2306  000B02  0E0A               	movlw	10
  2307  000B04                     u1461:
  2308  000B04  CFDB FFE3          	movff	plusw2,plusw1
  2309  000B08  06E8               	decf	wreg,f,c
  2310  000B0A  E2FC               	bc	u1461
  2311                           
  2312                           ;DS1307.c: 71:     uint8_t dateStr[13] = "00/00/2000";
  2313  000B0C  EE20  F0B0         	lfsr	2,DS1307_Display_UART@F3237
  2314  000B10  EE10  F01A         	lfsr	1,DS1307_Display_UART@dateStr
  2315  000B14  0E0C               	movlw	12
  2316  000B16                     u1471:
  2317  000B16  CFDB FFE3          	movff	plusw2,plusw1
  2318  000B1A  06E8               	decf	wreg,f,c
  2319  000B1C  E2FC               	bc	u1471
  2320  000B1E                     
  2321                           ;DS1307.c: 73:     BCD_to_ASCII((uint8_t) (myTime.hours), timeStr);
  2322  000B1E  0E27               	movlw	low DS1307_Display_UART@timeStr
  2323  000B20  6E0B               	movwf	BCD_to_ASCII@ptr^0,c
  2324  000B22  0E00               	movlw	high DS1307_Display_UART@timeStr
  2325  000B24  6E0C               	movwf	(BCD_to_ASCII@ptr+1)^0,c
  2326  000B26  5013               	movf	(DS1307_Display_UART@myTime+2)^0,w,c
  2327  000B28  EC04  F009         	call	_BCD_to_ASCII
  2328  000B2C                     
  2329                           ;DS1307.c: 74:     *(timeStr + 2) = ':';
  2330  000B2C  0E3A               	movlw	58
  2331  000B2E  6E29               	movwf	(DS1307_Display_UART@timeStr+2)^0,c
  2332  000B30                     
  2333                           ;DS1307.c: 76:     BCD_to_ASCII((uint8_t) (myTime.minutes), &timeStr[3]);
  2334  000B30  0E2A               	movlw	low (DS1307_Display_UART@timeStr+3)
  2335  000B32  6E0B               	movwf	BCD_to_ASCII@ptr^0,c
  2336  000B34  0E00               	movlw	high (DS1307_Display_UART@timeStr+3)
  2337  000B36  6E0C               	movwf	(BCD_to_ASCII@ptr+1)^0,c
  2338  000B38  5012               	movf	(DS1307_Display_UART@myTime+1)^0,w,c
  2339  000B3A  EC04  F009         	call	_BCD_to_ASCII
  2340  000B3E                     
  2341                           ;DS1307.c: 78:     *(timeStr + 5) = ':';
  2342  000B3E  0E3A               	movlw	58
  2343  000B40  6E2C               	movwf	(DS1307_Display_UART@timeStr+5)^0,c
  2344  000B42                     
  2345                           ;DS1307.c: 80:     BCD_to_ASCII((uint8_t) (myTime.seconds), &timeStr[6]);
  2346  000B42  0E2D               	movlw	low (DS1307_Display_UART@timeStr+6)
  2347  000B44  6E0B               	movwf	BCD_to_ASCII@ptr^0,c
  2348  000B46  0E00               	movlw	high (DS1307_Display_UART@timeStr+6)
  2349  000B48  6E0C               	movwf	(BCD_to_ASCII@ptr+1)^0,c
  2350  000B4A  5011               	movf	DS1307_Display_UART@myTime^0,w,c
  2351  000B4C  EC04  F009         	call	_BCD_to_ASCII
  2352  000B50                     
  2353                           ;DS1307.c: 82:     *(timeStr + 10) = '\0';
  2354  000B50  0E00               	movlw	0
  2355  000B52  6E31               	movwf	(DS1307_Display_UART@timeStr+10)^0,c
  2356  000B54                     
  2357                           ;DS1307.c: 86:     BCD_to_ASCII((uint8_t) (myTime.date), dateStr);
  2358  000B54  0E1A               	movlw	low DS1307_Display_UART@dateStr
  2359  000B56  6E0B               	movwf	BCD_to_ASCII@ptr^0,c
  2360  000B58  0E00               	movlw	high DS1307_Display_UART@dateStr
  2361  000B5A  6E0C               	movwf	(BCD_to_ASCII@ptr+1)^0,c
  2362  000B5C  5015               	movf	(DS1307_Display_UART@myTime+4)^0,w,c
  2363  000B5E  EC04  F009         	call	_BCD_to_ASCII
  2364  000B62                     
  2365                           ;DS1307.c: 87:     *(dateStr + 2) = '/';
  2366  000B62  0E2F               	movlw	47
  2367  000B64  6E1C               	movwf	(DS1307_Display_UART@dateStr+2)^0,c
  2368  000B66                     
  2369                           ;DS1307.c: 89:     BCD_to_ASCII((uint8_t) (myTime.month), &dateStr[3]);
  2370  000B66  0E1D               	movlw	low (DS1307_Display_UART@dateStr+3)
  2371  000B68  6E0B               	movwf	BCD_to_ASCII@ptr^0,c
  2372  000B6A  0E00               	movlw	high (DS1307_Display_UART@dateStr+3)
  2373  000B6C  6E0C               	movwf	(BCD_to_ASCII@ptr+1)^0,c
  2374  000B6E  5016               	movf	(DS1307_Display_UART@myTime+5)^0,w,c
  2375  000B70  EC04  F009         	call	_BCD_to_ASCII
  2376  000B74                     
  2377                           ;DS1307.c: 91:     *(dateStr + 5) = '/';
  2378  000B74  0E2F               	movlw	47
  2379  000B76  6E1F               	movwf	(DS1307_Display_UART@dateStr+5)^0,c
  2380  000B78                     
  2381                           ;DS1307.c: 93:     BCD_to_ASCII((uint8_t) (myTime.year), &dateStr[8]);
  2382  000B78  0E22               	movlw	low (DS1307_Display_UART@dateStr+8)
  2383  000B7A  6E0B               	movwf	BCD_to_ASCII@ptr^0,c
  2384  000B7C  0E00               	movlw	high (DS1307_Display_UART@dateStr+8)
  2385  000B7E  6E0C               	movwf	(BCD_to_ASCII@ptr+1)^0,c
  2386  000B80  5017               	movf	(DS1307_Display_UART@myTime+6)^0,w,c
  2387  000B82  EC04  F009         	call	_BCD_to_ASCII
  2388  000B86                     
  2389                           ;DS1307.c: 95:     *(dateStr + 12) = '\0';
  2390  000B86  0E00               	movlw	0
  2391  000B88  6E26               	movwf	(DS1307_Display_UART@dateStr+12)^0,c
  2392  000B8A                     
  2393                           ;DS1307.c: 97:     UART_puts((char *) timeStr);
  2394  000B8A  0E27               	movlw	low DS1307_Display_UART@timeStr
  2395  000B8C  6E0D               	movwf	UART_puts@ptr^0,c
  2396  000B8E  0E00               	movlw	high DS1307_Display_UART@timeStr
  2397  000B90  6E0E               	movwf	(UART_puts@ptr+1)^0,c
  2398  000B92  ECD4  F008         	call	_UART_puts	;wreg free
  2399  000B96                     
  2400                           ;DS1307.c: 98:     UART_puts((char *) dateStr);
  2401  000B96  0E1A               	movlw	low DS1307_Display_UART@dateStr
  2402  000B98  6E0D               	movwf	UART_puts@ptr^0,c
  2403  000B9A  0E00               	movlw	high DS1307_Display_UART@dateStr
  2404  000B9C  6E0E               	movwf	(UART_puts@ptr+1)^0,c
  2405  000B9E  ECD4  F008         	call	_UART_puts	;wreg free
  2406  000BA2                     
  2407                           ;DS1307.c: 100:     LCD_goto(1,1);
  2408  000BA2  0E01               	movlw	1
  2409  000BA4  6E0E               	movwf	LCD_goto@y^0,c
  2410  000BA6  0E01               	movlw	1
  2411  000BA8  ECF2  F006         	call	_LCD_goto
  2412  000BAC                     
  2413                           ;DS1307.c: 101:     LCD_puts((char *)timeStr);
  2414  000BAC  0E27               	movlw	low DS1307_Display_UART@timeStr
  2415  000BAE  6E0E               	movwf	LCD_puts@s^0,c
  2416  000BB0  0E00               	movlw	high DS1307_Display_UART@timeStr
  2417  000BB2  6E0F               	movwf	(LCD_puts@s+1)^0,c
  2418  000BB4  EC88  F008         	call	_LCD_puts	;wreg free
  2419  000BB8                     
  2420                           ;DS1307.c: 102:     LCD_goto(2,1);
  2421  000BB8  0E01               	movlw	1
  2422  000BBA  6E0E               	movwf	LCD_goto@y^0,c
  2423  000BBC  0E02               	movlw	2
  2424  000BBE  ECF2  F006         	call	_LCD_goto
  2425  000BC2                     
  2426                           ;DS1307.c: 103:     LCD_puts((char *) dateStr);
  2427  000BC2  0E1A               	movlw	low DS1307_Display_UART@dateStr
  2428  000BC4  6E0E               	movwf	LCD_puts@s^0,c
  2429  000BC6  0E00               	movlw	high DS1307_Display_UART@dateStr
  2430  000BC8  6E0F               	movwf	(LCD_puts@s+1)^0,c
  2431  000BCA  EC88  F008         	call	_LCD_puts	;wreg free
  2432  000BCE                     
  2433                           ;DS1307.c: 104:     LCD_goto(2,11);
  2434  000BCE  0E0B               	movlw	11
  2435  000BD0  6E0E               	movwf	LCD_goto@y^0,c
  2436  000BD2  0E02               	movlw	2
  2437  000BD4  ECF2  F006         	call	_LCD_goto
  2438  000BD8                     
  2439                           ;DS1307.c: 105:     LCD_putrs(eish[myTime.day - 1]);
  2440  000BD8  5014               	movf	(DS1307_Display_UART@myTime+3)^0,w,c
  2441  000BDA  6E18               	movwf	??_DS1307_Display_UART^0,c
  2442  000BDC  6A19               	clrf	(??_DS1307_Display_UART+1)^0,c
  2443  000BDE  90D8               	bcf	status,0,c
  2444  000BE0  3618               	rlcf	??_DS1307_Display_UART^0,f,c
  2445  000BE2  3619               	rlcf	(??_DS1307_Display_UART+1)^0,f,c
  2446  000BE4  0E30               	movlw	low (_eish+65534)
  2447  000BE6  2418               	addwf	??_DS1307_Display_UART^0,w,c
  2448  000BE8  6ED9               	movwf	fsr2l,c
  2449  000BEA  0E00               	movlw	high (_eish+65534)
  2450  000BEC  2019               	addwfc	(??_DS1307_Display_UART+1)^0,w,c
  2451  000BEE  6EDA               	movwf	fsr2h,c
  2452  000BF0  CFDE F00E          	movff	postinc2,LCD_putrs@s
  2453  000BF4  CFDD F00F          	movff	postdec2,LCD_putrs@s+1
  2454  000BF8  EC6B  F008         	call	_LCD_putrs	;wreg free
  2455  000BFC  0012               	return		;funcret
  2456  000BFE                     __end_of_DS1307_Display_UART:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _UART_puts *****************
  2460 ;; Defined at:
  2461 ;;		line 49 in file "uart.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  ptr             2   12[COMRAM] PTR unsigned char 
  2464 ;;		 -> DS1307_Display_UART@dateStr(13), DS1307_Display_UART@timeStr(11), 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2476 ;;      Params:         2       0       0       0       0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2479 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2480 ;;Total ram usage:        2 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 4
  2483 ;; This function calls:
  2484 ;;		_UART_write
  2485 ;; This function is called by:
  2486 ;;		_DS1307_Display_UART
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text19
  2491  0011A8                     __ptext19:
  2492                           	callstack 0
  2493  0011A8                     _UART_puts:
  2494                           	callstack 25
  2495  0011A8                     
  2496                           ;uart.c: 49: void UART_puts(char * ptr);uart.c: 50: {;uart.c: 51:     while(*ptr)
  2497  0011A8  EFDF  F008         	goto	l2090
  2498  0011AC                     l2086:
  2499                           
  2500                           ;uart.c: 52:     {;uart.c: 53:         UART_write(*ptr++);
  2501  0011AC  C00D  FFD9         	movff	UART_puts@ptr,fsr2l
  2502  0011B0  C00E  FFDA         	movff	UART_puts@ptr+1,fsr2h
  2503  0011B4  50DF               	movf	indf2,w,c
  2504  0011B6  ECBB  F008         	call	_UART_write
  2505  0011BA  4A0D               	infsnz	UART_puts@ptr^0,f,c
  2506  0011BC  2A0E               	incf	(UART_puts@ptr+1)^0,f,c
  2507  0011BE                     l2090:
  2508                           
  2509                           ;uart.c: 51:     while(*ptr)
  2510  0011BE  C00D  FFD9         	movff	UART_puts@ptr,fsr2l
  2511  0011C2  C00E  FFDA         	movff	UART_puts@ptr+1,fsr2h
  2512  0011C6  50DF               	movf	indf2,w,c
  2513  0011C8  A4D8               	btfss	status,2,c
  2514  0011CA  EFE9  F008         	goto	u1171
  2515  0011CE  EFEB  F008         	goto	u1170
  2516  0011D2                     u1171:
  2517  0011D2  EFD6  F008         	goto	l2086
  2518  0011D6                     u1170:
  2519  0011D6  0012               	return		;funcret
  2520  0011D8                     __end_of_UART_puts:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _UART_write *****************
  2524 ;; Defined at:
  2525 ;;		line 107 in file "uart.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  data            1    wreg     unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  data            1   10[COMRAM] unsigned char 
  2530 ;;  i               1   11[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0
  2541 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2543 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2544 ;;Total ram usage:        2 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 3
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_UART_puts
  2551 ;;		_UART_putrs
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text20
  2556  001176                     __ptext20:
  2557                           	callstack 0
  2558  001176                     _UART_write:
  2559                           	callstack 25
  2560                           
  2561                           ;incstack = 0
  2562                           ;UART_write@data stored from wreg
  2563  001176  6E0B               	movwf	UART_write@data^0,c
  2564  001178                     
  2565                           ;uart.c: 108:     tx_buffer_index_t i = (_tx_buffer_head + 1) % 64;
  2566  001178  2854               	incf	__tx_buffer_head^0,w,c	;volatile
  2567  00117A  0B3F               	andlw	63
  2568  00117C  6E0C               	movwf	UART_write@i^0,c
  2569  00117E                     l2054:
  2570  00117E  5053               	movf	__tx_buffer_tail^0,w,c	;volatile
  2571  001180  180C               	xorwf	UART_write@i^0,w,c
  2572  001182  B4D8               	btfsc	status,2,c
  2573  001184  EFC6  F008         	goto	u1091
  2574  001188  EFC8  F008         	goto	u1090
  2575  00118C                     u1091:
  2576  00118C  EFBF  F008         	goto	l2054
  2577  001190                     u1090:
  2578  001190                     
  2579                           ;uart.c: 110:     _tx_buffer[_tx_buffer_head] = data;
  2580  001190  0E60               	movlw	low __tx_buffer
  2581  001192  2454               	addwf	__tx_buffer_head^0,w,c	;volatile
  2582  001194  6ED9               	movwf	fsr2l,c
  2583  001196  6ADA               	clrf	fsr2h,c
  2584  001198  0E00               	movlw	high __tx_buffer
  2585  00119A  22DA               	addwfc	fsr2h,f,c
  2586  00119C  C00B  FFDF         	movff	UART_write@data,indf2
  2587  0011A0                     
  2588                           ;uart.c: 111:     _tx_buffer_head = i;
  2589  0011A0  C00C  F054         	movff	UART_write@i,__tx_buffer_head	;volatile
  2590  0011A4                     
  2591                           ;uart.c: 112:     PIE1bits.TX1IE = 1;
  2592  0011A4  889D               	bsf	157,4,c	;volatile
  2593  0011A6  0012               	return		;funcret
  2594  0011A8                     __end_of_UART_write:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function _LCD_puts *****************
  2598 ;; Defined at:
  2599 ;;		line 120 in file "LCD.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  s               2   13[COMRAM] PTR unsigned char 
  2602 ;;		 -> i2c_scanBus@eish(15), DS1307_Display_UART@dateStr(13), DS1307_Display_UART@timeStr(11), 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2614 ;;      Params:         2       0       0       0       0       0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2617 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2618 ;;Total ram usage:        2 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 4
  2621 ;; This function calls:
  2622 ;;		_LCD_send
  2623 ;; This function is called by:
  2624 ;;		_DS1307_Display_UART
  2625 ;;		_i2c_scanBus
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text21
  2630  001110                     __ptext21:
  2631                           	callstack 0
  2632  001110                     _LCD_puts:
  2633                           	callstack 25
  2634  001110                     
  2635                           ;LCD.c: 120: void LCD_puts(char *s);LCD.c: 121: {;LCD.c: 122:     while(*s)
  2636  001110  EF95  F008         	goto	l2116
  2637  001114                     l2112:
  2638                           
  2639                           ;LCD.c: 123:         LCD_send(1,*(s++));
  2640  001114  C00E  FFD9         	movff	LCD_puts@s,fsr2l
  2641  001118  C00F  FFDA         	movff	LCD_puts@s+1,fsr2h
  2642  00111C  50DF               	movf	indf2,w,c
  2643  00111E  6E0B               	movwf	LCD_send@data^0,c
  2644  001120  0E01               	movlw	1
  2645  001122  EC4D  F008         	call	_LCD_send
  2646  001126  4A0E               	infsnz	LCD_puts@s^0,f,c
  2647  001128  2A0F               	incf	(LCD_puts@s+1)^0,f,c
  2648  00112A                     l2116:
  2649                           
  2650                           ;LCD.c: 122:     while(*s)
  2651  00112A  C00E  FFD9         	movff	LCD_puts@s,fsr2l
  2652  00112E  C00F  FFDA         	movff	LCD_puts@s+1,fsr2h
  2653  001132  50DF               	movf	indf2,w,c
  2654  001134  A4D8               	btfss	status,2,c
  2655  001136  EF9F  F008         	goto	u1221
  2656  00113A  EFA1  F008         	goto	u1220
  2657  00113E                     u1221:
  2658  00113E  EF8A  F008         	goto	l2112
  2659  001142                     u1220:
  2660  001142  0012               	return		;funcret
  2661  001144                     __end_of_LCD_puts:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _LCD_putrs *****************
  2665 ;; Defined at:
  2666 ;;		line 110 in file "LCD.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2669 ;;		 -> STR_7(10), STR_6(8), STR_5(10), STR_4(11), 
  2670 ;;		 -> STR_3(9), STR_2(8), STR_1(8), 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:         2       0       0       0       0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2685 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2686 ;;Total ram usage:        2 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 4
  2689 ;; This function calls:
  2690 ;;		_LCD_send
  2691 ;; This function is called by:
  2692 ;;		_DS1307_Display_UART
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text22
  2697  0010D6                     __ptext22:
  2698                           	callstack 0
  2699  0010D6                     _LCD_putrs:
  2700                           	callstack 25
  2701  0010D6                     
  2702                           ;LCD.c: 110: void LCD_putrs(const char *s);LCD.c: 111: {;LCD.c: 112:     while(*s)
  2703  0010D6  EF79  F008         	goto	l2124
  2704  0010DA                     l2120:
  2705                           
  2706                           ;LCD.c: 113:         LCD_send(1,*(s++));
  2707  0010DA  C00E  FFF6         	movff	LCD_putrs@s,tblptrl
  2708  0010DE  C00F  FFF7         	movff	LCD_putrs@s+1,tblptrh
  2709  0010E2                     	if	0	;tblptru may be non-zero
  2710  0010E2                     	endif
  2711  0010E2                     	if	0	;tblptru may be non-zero
  2712  0010E2                     	endif
  2713  0010E2  0008               	tblrd		*
  2714  0010E4  CFF5 F00B          	movff	tablat,LCD_send@data
  2715  0010E8  0E01               	movlw	1
  2716  0010EA  EC4D  F008         	call	_LCD_send
  2717  0010EE  4A0E               	infsnz	LCD_putrs@s^0,f,c
  2718  0010F0  2A0F               	incf	(LCD_putrs@s+1)^0,f,c
  2719  0010F2                     l2124:
  2720                           
  2721                           ;LCD.c: 112:     while(*s)
  2722  0010F2  C00E  FFF6         	movff	LCD_putrs@s,tblptrl
  2723  0010F6  C00F  FFF7         	movff	LCD_putrs@s+1,tblptrh
  2724  0010FA                     	if	0	;tblptru may be non-zero
  2725  0010FA                     	endif
  2726  0010FA                     	if	0	;tblptru may be non-zero
  2727  0010FA                     	endif
  2728  0010FA  0008               	tblrd		*
  2729  0010FC  50F5               	movf	tablat,w,c
  2730  0010FE  0900               	iorlw	0
  2731  001100  A4D8               	btfss	status,2,c
  2732  001102  EF85  F008         	goto	u1231
  2733  001106  EF87  F008         	goto	u1230
  2734  00110A                     u1231:
  2735  00110A  EF6D  F008         	goto	l2120
  2736  00110E                     u1230:
  2737  00110E  0012               	return		;funcret
  2738  001110                     __end_of_LCD_putrs:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _LCD_goto *****************
  2742 ;; Defined at:
  2743 ;;		line 93 in file "LCD.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  x               1    wreg     unsigned char 
  2746 ;;  y               1   13[COMRAM] unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  x               1   15[COMRAM] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2758 ;;      Params:         1       0       0       0       0       0       0       0       0
  2759 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2760 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2761 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2762 ;;Total ram usage:        3 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 4
  2765 ;; This function calls:
  2766 ;;		_LCD_send
  2767 ;; This function is called by:
  2768 ;;		_DS1307_Display_UART
  2769 ;;		_i2c_scanBus
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text23
  2774  000DE4                     __ptext23:
  2775                           	callstack 0
  2776  000DE4                     _LCD_goto:
  2777                           	callstack 25
  2778                           
  2779                           ;incstack = 0
  2780                           ;LCD_goto@x stored from wreg
  2781  000DE4  6E10               	movwf	LCD_goto@x^0,c
  2782  000DE6                     
  2783                           ;LCD.c: 93: void LCD_goto(unsigned char x, unsigned char y);LCD.c: 94: {;LCD.c: 95:     
      +                          if(x == 1)
  2784  000DE6  0410               	decf	LCD_goto@x^0,w,c
  2785  000DE8  A4D8               	btfss	status,2,c
  2786  000DEA  EFF9  F006         	goto	u1181
  2787  000DEE  EFFB  F006         	goto	u1180
  2788  000DF2                     u1181:
  2789  000DF2  EF03  F007         	goto	l2096
  2790  000DF6                     u1180:
  2791  000DF6                     
  2792                           ;LCD.c: 96:         LCD_send(0,(0x80 + y-1));
  2793  000DF6  500E               	movf	LCD_goto@y^0,w,c
  2794  000DF8  0F7F               	addlw	127
  2795  000DFA  6E0B               	movwf	LCD_send@data^0,c
  2796  000DFC  0E00               	movlw	0
  2797  000DFE  EC4D  F008         	call	_LCD_send
  2798  000E02  EF36  F007         	goto	l2108
  2799  000E06                     l2096:
  2800  000E06  0E02               	movlw	2
  2801  000E08  1810               	xorwf	LCD_goto@x^0,w,c
  2802  000E0A  A4D8               	btfss	status,2,c
  2803  000E0C  EF0A  F007         	goto	u1191
  2804  000E10  EF0C  F007         	goto	u1190
  2805  000E14                     u1191:
  2806  000E14  EF14  F007         	goto	l2100
  2807  000E18                     u1190:
  2808  000E18                     
  2809                           ;LCD.c: 98:         LCD_send(0,(0xC0 + y-1));
  2810  000E18  500E               	movf	LCD_goto@y^0,w,c
  2811  000E1A  0FBF               	addlw	191
  2812  000E1C  6E0B               	movwf	LCD_send@data^0,c
  2813  000E1E  0E00               	movlw	0
  2814  000E20  EC4D  F008         	call	_LCD_send
  2815  000E24  EF36  F007         	goto	l2108
  2816  000E28                     l2100:
  2817  000E28  0E03               	movlw	3
  2818  000E2A  1810               	xorwf	LCD_goto@x^0,w,c
  2819  000E2C  A4D8               	btfss	status,2,c
  2820  000E2E  EF1B  F007         	goto	u1201
  2821  000E32  EF1D  F007         	goto	u1200
  2822  000E36                     u1201:
  2823  000E36  EF25  F007         	goto	l2104
  2824  000E3A                     u1200:
  2825  000E3A                     
  2826                           ;LCD.c: 100:         LCD_send(0,(0x94 + y-1));
  2827  000E3A  500E               	movf	LCD_goto@y^0,w,c
  2828  000E3C  0F93               	addlw	147
  2829  000E3E  6E0B               	movwf	LCD_send@data^0,c
  2830  000E40  0E00               	movlw	0
  2831  000E42  EC4D  F008         	call	_LCD_send
  2832  000E46  EF36  F007         	goto	l2108
  2833  000E4A                     l2104:
  2834  000E4A  0E04               	movlw	4
  2835  000E4C  1810               	xorwf	LCD_goto@x^0,w,c
  2836  000E4E  A4D8               	btfss	status,2,c
  2837  000E50  EF2C  F007         	goto	u1211
  2838  000E54  EF2E  F007         	goto	u1210
  2839  000E58                     u1211:
  2840  000E58  EF36  F007         	goto	l285
  2841  000E5C                     u1210:
  2842  000E5C                     
  2843                           ;LCD.c: 102:         LCD_send(0,(0xD4 + y-1));
  2844  000E5C  500E               	movf	LCD_goto@y^0,w,c
  2845  000E5E  0FD3               	addlw	211
  2846  000E60  6E0B               	movwf	LCD_send@data^0,c
  2847  000E62  0E00               	movlw	0
  2848  000E64  EC4D  F008         	call	_LCD_send
  2849  000E68  EF36  F007         	goto	l2108
  2850  000E6C                     l285:
  2851  000E6C                     l2108:
  2852                           
  2853                           ;LCD.c: 103:     _delay((unsigned long)((2)*(16000000/4000.0)));
  2854  000E6C  0E0B               	movlw	11
  2855  000E6E  6E0F               	movwf	??_LCD_goto^0,c
  2856  000E70  0E62               	movlw	98
  2857  000E72                     u1647:
  2858  000E72  2EE8               	decfsz	wreg,f,c
  2859  000E74  D7FE               	bra	u1647
  2860  000E76  2E0F               	decfsz	??_LCD_goto^0,f,c
  2861  000E78  D7FC               	bra	u1647
  2862  000E7A  D000               	nop2	
  2863  000E7C  0012               	return		;funcret
  2864  000E7E                     __end_of_LCD_goto:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _LCD_send *****************
  2868 ;; Defined at:
  2869 ;;		line 40 in file "LCD.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  RS              1    wreg     unsigned char 
  2872 ;;  data            1   10[COMRAM] unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  RS              1   12[COMRAM] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2884 ;;      Params:         1       0       0       0       0       0       0       0       0
  2885 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2886 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2887 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        3 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 3
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_LCD_init
  2895 ;;		_LCD_clear
  2896 ;;		_LCD_goto
  2897 ;;		_LCD_putrs
  2898 ;;		_LCD_puts
  2899 ;;		_AddSpaces
  2900 ;;		_LCD_putsLen
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text24
  2905  00109A                     __ptext24:
  2906                           	callstack 0
  2907  00109A                     _LCD_send:
  2908                           	callstack 26
  2909                           
  2910                           ;incstack = 0
  2911                           ;LCD_send@RS stored from wreg
  2912  00109A  6E0D               	movwf	LCD_send@RS^0,c
  2913  00109C                     
  2914                           ;LCD.c: 40: void LCD_send(char RS, unsigned char data);LCD.c: 41: {;LCD.c: 42:     LATDb
      +                          its.LATD5 = RS,0;
  2915  00109C  B00D               	btfsc	LCD_send@RS^0,0,c
  2916  00109E  D002               	bra	u1085
  2917  0010A0  9A8C               	bcf	140,5,c	;volatile
  2918  0010A2  D001               	bra	u1086
  2919  0010A4                     u1085:
  2920  0010A4  8A8C               	bsf	140,5,c	;volatile
  2921  0010A6                     u1086:
  2922  0010A6                     
  2923                           ;LCD.c: 43:     LATD &= 0xF0;
  2924  0010A6  0EF0               	movlw	240
  2925  0010A8  168C               	andwf	140,f,c	;volatile
  2926  0010AA                     
  2927                           ;LCD.c: 44:     LATD |= ((data>>4) & 0x0F);
  2928  0010AA  380B               	swapf	LCD_send@data^0,w,c
  2929  0010AC  0B0F               	andlw	15
  2930  0010AE  0B0F               	andlw	15
  2931  0010B0  128C               	iorwf	140,f,c	;volatile
  2932  0010B2                     
  2933                           ;LCD.c: 45:     ((LATDbits.LATD4 = 1),(LATDbits.LATD4 = 0));
  2934  0010B2  888C               	bsf	140,4,c	;volatile
  2935  0010B4  988C               	bcf	140,4,c	;volatile
  2936  0010B6                     
  2937                           ;LCD.c: 46:     LATD &= 0xF0;
  2938  0010B6  0EF0               	movlw	240
  2939  0010B8  168C               	andwf	140,f,c	;volatile
  2940  0010BA                     
  2941                           ;LCD.c: 47:     LATD |= (data & 0x0F);
  2942  0010BA  500B               	movf	LCD_send@data^0,w,c
  2943  0010BC  0B0F               	andlw	15
  2944  0010BE  128C               	iorwf	140,f,c	;volatile
  2945  0010C0                     
  2946                           ;LCD.c: 48:     ((LATDbits.LATD4 = 1),(LATDbits.LATD4 = 0));
  2947  0010C0  888C               	bsf	140,4,c	;volatile
  2948  0010C2  988C               	bcf	140,4,c	;volatile
  2949                           
  2950                           ;LCD.c: 49:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2951  0010C4  0E1A               	movlw	26
  2952  0010C6  6E0C               	movwf	??_LCD_send^0,c
  2953  0010C8  0EF8               	movlw	248
  2954  0010CA                     u1657:
  2955  0010CA  2EE8               	decfsz	wreg,f,c
  2956  0010CC  D7FE               	bra	u1657
  2957  0010CE  2E0C               	decfsz	??_LCD_send^0,f,c
  2958  0010D0  D7FC               	bra	u1657
  2959  0010D2  D000               	nop2	
  2960  0010D4  0012               	return		;funcret
  2961  0010D6                     __end_of_LCD_send:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _BCD_to_ASCII *****************
  2965 ;; Defined at:
  2966 ;;		line 108 in file "DS1307.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  valueInBCD      1    wreg     unsigned char 
  2969 ;;  ptr             2   10[COMRAM] PTR unsigned char 
  2970 ;;		 -> DS1307_Display_UART@dateStr(13), DS1307_Display_UART@timeStr(11), 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  valueInBCD      1   12[COMRAM] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2982 ;;      Params:         2       0       0       0       0       0       0       0       0
  2983 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2985 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2986 ;;Total ram usage:        3 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 3
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_DS1307_Display_UART
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text25
  2997  001208                     __ptext25:
  2998                           	callstack 0
  2999  001208                     _BCD_to_ASCII:
  3000                           	callstack 26
  3001                           
  3002                           ;incstack = 0
  3003                           ;BCD_to_ASCII@valueInBCD stored from wreg
  3004  001208  6E0D               	movwf	BCD_to_ASCII@valueInBCD^0,c
  3005  00120A                     
  3006                           ;DS1307.c: 109:     *ptr++ = ((valueInBCD >> 4) | 0x30);
  3007  00120A  380D               	swapf	BCD_to_ASCII@valueInBCD^0,w,c
  3008  00120C  0B0F               	andlw	15
  3009  00120E  0930               	iorlw	48
  3010  001210  C00B  FFD9         	movff	BCD_to_ASCII@ptr,fsr2l
  3011  001214  C00C  FFDA         	movff	BCD_to_ASCII@ptr+1,fsr2h
  3012  001218  6EDF               	movwf	indf2,c
  3013  00121A  4A0B               	infsnz	BCD_to_ASCII@ptr^0,f,c
  3014  00121C  2A0C               	incf	(BCD_to_ASCII@ptr+1)^0,f,c
  3015  00121E                     
  3016                           ;DS1307.c: 110:     *ptr = ((valueInBCD & 0x0F) | 0x30);
  3017  00121E  500D               	movf	BCD_to_ASCII@valueInBCD^0,w,c
  3018  001220  0B0F               	andlw	15
  3019  001222  0930               	iorlw	48
  3020  001224  C00B  FFD9         	movff	BCD_to_ASCII@ptr,fsr2l
  3021  001228  C00C  FFDA         	movff	BCD_to_ASCII@ptr+1,fsr2h
  3022  00122C  6EDF               	movwf	indf2,c
  3023  00122E  0012               	return		;funcret
  3024  001230                     __end_of_BCD_to_ASCII:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _myISR_low *****************
  3028 ;; Defined at:
  3029 ;;		line 60 in file "main.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3045 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3046 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3047 ;;Total ram usage:        3 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 2
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		Interrupt level 1
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	intcodelo
  3058  000018                     __pintcodelo:
  3059                           	callstack 0
  3060  000018                     _myISR_low:
  3061                           	callstack 25
  3062                           
  3063                           ;incstack = 0
  3064  000018  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3065  00001A  CFD8 F008          	movff	status,??_myISR_low
  3066  00001E  CFE8 F009          	movff	wreg,??_myISR_low+1
  3067  000022  CFE0 F00A          	movff	bsr,??_myISR_low+2
  3068  000026                     
  3069                           ;main.c: 61:     if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  3070  000026  AAF2               	btfss	242,5,c	;volatile
  3071  000028  EF18  F000         	goto	i1u49_21
  3072  00002C  EF1A  F000         	goto	i1u49_20
  3073  000030                     i1u49_21:
  3074  000030  EF28  F000         	goto	i1l97
  3075  000034                     i1u49_20:
  3076  000034  A4F2               	btfss	242,2,c	;volatile
  3077  000036  EF1F  F000         	goto	i1u50_21
  3078  00003A  EF21  F000         	goto	i1u50_20
  3079  00003E                     i1u50_21:
  3080  00003E  EF28  F000         	goto	i1l97
  3081  000042                     i1u50_20:
  3082  000042                     
  3083                           ;main.c: 62:         flag = 1;
  3084  000042  0E01               	movlw	1
  3085  000044  6E4F               	movwf	_flag^0,c	;volatile
  3086                           
  3087                           ;main.c: 63:         TMR0H = 0xC2;
  3088  000046  0EC2               	movlw	194
  3089  000048  6ED7               	movwf	215,c	;volatile
  3090                           
  3091                           ;main.c: 64:         TMR0L = 0xF7;
  3092  00004A  0EF7               	movlw	247
  3093  00004C  6ED6               	movwf	214,c	;volatile
  3094  00004E                     
  3095                           ;main.c: 65:         INTCONbits.TMR0IF = 0;
  3096  00004E  94F2               	bcf	242,2,c	;volatile
  3097  000050                     i1l97:
  3098  000050  C00A  FFE0         	movff	??_myISR_low+2,bsr
  3099  000054  C009  FFE8         	movff	??_myISR_low+1,wreg
  3100  000058  C008  FFD8         	movff	??_myISR_low,status
  3101  00005C  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3102  00005E  0010               	retfie	
  3103  000060                     __end_of_myISR_low:
  3104                           	callstack 0
  3105                           
  3106 ;; *************** function _myISR_high *****************
  3107 ;; Defined at:
  3108 ;;		line 50 in file "main.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3124 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3125 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3126 ;;Total ram usage:        2 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 1
  3129 ;; This function calls:
  3130 ;;		_UART_rx_complete_irq
  3131 ;;		_UART_tx_udr_empty_irq
  3132 ;; This function is called by:
  3133 ;;		Interrupt level 2
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	intcode
  3138  000008                     __pintcode:
  3139                           	callstack 0
  3140  000008                     _myISR_high:
  3141                           	callstack 25
  3142                           
  3143                           ;incstack = 0
  3144  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3145  00000A  EF23  F008         	goto	int_func
  3146                           
  3147                           	psect	intcode_body
  3148  001046                     __pintcode_body:
  3149                           	callstack 25
  3150  001046                     int_func:
  3151                           	callstack 25
  3152  001046  CFD9 F006          	movff	fsr2l,??_myISR_high
  3153  00104A  CFDA F007          	movff	fsr2h,??_myISR_high+1
  3154  00104E                     
  3155                           ;main.c: 51:     if (PIE1bits.RC1IE && PIR1bits.RC1IF) {
  3156  00104E  AA9D               	btfss	157,5,c	;volatile
  3157  001050  EF2C  F008         	goto	i2u95_41
  3158  001054  EF2E  F008         	goto	i2u95_40
  3159  001058                     i2u95_41:
  3160  001058  EF37  F008         	goto	i2l1940
  3161  00105C                     i2u95_40:
  3162  00105C  AA9E               	btfss	158,5,c	;volatile
  3163  00105E  EF33  F008         	goto	i2u96_41
  3164  001062  EF35  F008         	goto	i2u96_40
  3165  001066                     i2u96_41:
  3166  001066  EF37  F008         	goto	i2l1940
  3167  00106A                     i2u96_40:
  3168  00106A                     
  3169                           ;main.c: 52:         UART_rx_complete_irq();
  3170  00106A  ECBB  F007         	call	_UART_rx_complete_irq	;wreg free
  3171  00106E                     i2l1940:
  3172                           
  3173                           ;main.c: 54:     if (PIE1bits.TX1IE && PIR1bits.TX1IF)
  3174  00106E  A89D               	btfss	157,4,c	;volatile
  3175  001070  EF3C  F008         	goto	i2u97_41
  3176  001074  EF3E  F008         	goto	i2u97_40
  3177  001078                     i2u97_41:
  3178  001078  EF47  F008         	goto	i2l91
  3179  00107C                     i2u97_40:
  3180  00107C  A89E               	btfss	158,4,c	;volatile
  3181  00107E  EF43  F008         	goto	i2u98_41
  3182  001082  EF45  F008         	goto	i2u98_40
  3183  001086                     i2u98_41:
  3184  001086  EF47  F008         	goto	i2l91
  3185  00108A                     i2u98_40:
  3186  00108A                     
  3187                           ;main.c: 55:     {;main.c: 56:         UART_tx_udr_empty_irq();
  3188  00108A  ECEC  F008         	call	_UART_tx_udr_empty_irq	;wreg free
  3189  00108E                     i2l91:
  3190  00108E  C007  FFDA         	movff	??_myISR_high+1,fsr2h
  3191  001092  C006  FFD9         	movff	??_myISR_high,fsr2l
  3192  001096  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3193  001098  0011               	retfie		f
  3194  00109A                     __end_of_myISR_high:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _UART_tx_udr_empty_irq *****************
  3198 ;; Defined at:
  3199 ;;		line 140 in file "uart.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  c               1    0[COMRAM] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0
  3214 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3216 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3217 ;;Total ram usage:        1 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_myISR_high
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text28
  3227  0011D8                     __ptext28:
  3228                           	callstack 0
  3229  0011D8                     _UART_tx_udr_empty_irq:
  3230                           	callstack 25
  3231  0011D8                     
  3232                           ;uart.c: 142:     uint8_t c = _tx_buffer[_tx_buffer_tail];
  3233  0011D8  0E60               	movlw	low __tx_buffer
  3234  0011DA  2453               	addwf	__tx_buffer_tail^0,w,c	;volatile
  3235  0011DC  6ED9               	movwf	fsr2l,c
  3236  0011DE  6ADA               	clrf	fsr2h,c
  3237  0011E0  0E00               	movlw	high __tx_buffer
  3238  0011E2  22DA               	addwfc	fsr2h,f,c
  3239  0011E4  50DF               	movf	indf2,w,c
  3240  0011E6  6E01               	movwf	UART_tx_udr_empty_irq@c^0,c
  3241  0011E8                     
  3242                           ;uart.c: 143:     _tx_buffer_tail = (_tx_buffer_tail + 1) % 64;
  3243  0011E8  2853               	incf	__tx_buffer_tail^0,w,c	;volatile
  3244  0011EA  0B3F               	andlw	63
  3245  0011EC  6E53               	movwf	__tx_buffer_tail^0,c	;volatile
  3246  0011EE                     
  3247                           ;uart.c: 144:     TXREG = c;
  3248  0011EE  C001  FFAD         	movff	UART_tx_udr_empty_irq@c,4013	;volatile
  3249  0011F2                     
  3250                           ;uart.c: 145:     if(_tx_buffer_head == _tx_buffer_tail)
  3251  0011F2  5053               	movf	__tx_buffer_tail^0,w,c	;volatile
  3252  0011F4  1854               	xorwf	__tx_buffer_head^0,w,c	;volatile
  3253  0011F6  A4D8               	btfss	status,2,c
  3254  0011F8  EF00  F009         	goto	i2u79_41
  3255  0011FC  EF02  F009         	goto	i2u79_40
  3256  001200                     i2u79_41:
  3257  001200  EF03  F009         	goto	i2l411
  3258  001204                     i2u79_40:
  3259  001204                     
  3260                           ;uart.c: 146:     {;uart.c: 149:         PIE1bits.TX1IE = 0;
  3261  001204  989D               	bcf	157,4,c	;volatile
  3262  001206                     i2l411:
  3263  001206  0012               	return		;funcret
  3264  001208                     __end_of_UART_tx_udr_empty_irq:
  3265                           	callstack 0
  3266                           
  3267 ;; *************** function _UART_rx_complete_irq *****************
  3268 ;; Defined at:
  3269 ;;		line 116 in file "uart.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  i               2    3[COMRAM] unsigned short 
  3274 ;;  c               1    2[COMRAM] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3284 ;;      Params:         0       0       0       0       0       0       0       0       0
  3285 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3286 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3287 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3288 ;;Total ram usage:        5 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_myISR_high
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text29
  3298  000F76                     __ptext29:
  3299                           	callstack 0
  3300  000F76                     _UART_rx_complete_irq:
  3301                           	callstack 25
  3302  000F76                     
  3303                           ;uart.c: 117:     uint8_t c;;uart.c: 118:     if (RCSTAbits.OERR) {
  3304  000F76  A2AB               	btfss	171,1,c	;volatile
  3305  000F78  EFC0  F007         	goto	i2u26_41
  3306  000F7C  EFC2  F007         	goto	i2u26_40
  3307  000F80                     i2u26_41:
  3308  000F80  EFC4  F007         	goto	i2l403
  3309  000F84                     i2u26_40:
  3310  000F84                     
  3311                           ;uart.c: 119:         RCSTAbits.CREN = 0;
  3312  000F84  98AB               	bcf	171,4,c	;volatile
  3313                           
  3314                           ;uart.c: 120:         RCSTAbits.CREN = 1;
  3315  000F86  88AB               	bsf	171,4,c	;volatile
  3316  000F88                     i2l403:
  3317                           
  3318                           ;uart.c: 122:     if (RCSTAbits.FERR) {
  3319  000F88  A4AB               	btfss	171,2,c	;volatile
  3320  000F8A  EFC9  F007         	goto	i2u27_41
  3321  000F8E  EFCB  F007         	goto	i2u27_40
  3322  000F92                     i2u27_41:
  3323  000F92  EFCC  F007         	goto	i2l404
  3324  000F96                     i2u27_40:
  3325  000F96  50AE               	movf	174,w,c	;volatile
  3326  000F98                     i2l404:
  3327                           
  3328                           ;uart.c: 127:     c = RCREG;
  3329  000F98  CFAE F003          	movff	4014,UART_rx_complete_irq@c	;volatile
  3330  000F9C                     
  3331                           ;uart.c: 128:     rx_buffer_index_t i = (unsigned int) (_rx_buffer_head + 1) % 512;
  3332  000F9C  0E01               	movlw	1
  3333  000F9E  244D               	addwf	__rx_buffer_head^0,w,c	;volatile
  3334  000FA0  6E01               	movwf	??_UART_rx_complete_irq^0,c
  3335  000FA2  0E00               	movlw	0
  3336  000FA4  204E               	addwfc	(__rx_buffer_head+1)^0,w,c	;volatile
  3337  000FA6  6E02               	movwf	(??_UART_rx_complete_irq+1)^0,c
  3338  000FA8  0EFF               	movlw	255
  3339  000FAA  1401               	andwf	??_UART_rx_complete_irq^0,w,c
  3340  000FAC  6E04               	movwf	UART_rx_complete_irq@i^0,c
  3341  000FAE  0E01               	movlw	1
  3342  000FB0  1402               	andwf	(??_UART_rx_complete_irq+1)^0,w,c
  3343  000FB2  6E05               	movwf	(UART_rx_complete_irq@i+1)^0,c
  3344                           
  3345                           ;uart.c: 129:     if (i != _rx_buffer_tail)
  3346  000FB4  504B               	movf	__rx_buffer_tail^0,w,c	;volatile
  3347  000FB6  1804               	xorwf	UART_rx_complete_irq@i^0,w,c
  3348  000FB8  E109               	bnz	i2u28_40
  3349  000FBA  504C               	movf	(__rx_buffer_tail+1)^0,w,c	;volatile
  3350  000FBC  1805               	xorwf	(UART_rx_complete_irq@i+1)^0,w,c
  3351  000FBE  B4D8               	btfsc	status,2,c
  3352  000FC0  EFE4  F007         	goto	i2u28_41
  3353  000FC4  EFE6  F007         	goto	i2u28_40
  3354  000FC8                     i2u28_41:
  3355  000FC8  EFF4  F007         	goto	i2l1264
  3356  000FCC                     i2u28_40:
  3357  000FCC                     
  3358                           ;uart.c: 130:     {;uart.c: 131:         _rx_buffer[_rx_buffer_head] = c;
  3359  000FCC  0EC4               	movlw	low __rx_buffer
  3360  000FCE  244D               	addwf	__rx_buffer_head^0,w,c	;volatile
  3361  000FD0  6ED9               	movwf	fsr2l,c
  3362  000FD2  0E00               	movlw	high __rx_buffer
  3363  000FD4  204E               	addwfc	(__rx_buffer_head+1)^0,w,c	;volatile
  3364  000FD6  6EDA               	movwf	fsr2h,c
  3365  000FD8  C003  FFDF         	movff	UART_rx_complete_irq@c,indf2
  3366  000FDC                     
  3367                           ;uart.c: 132:         _rx_buffer_head = i;
  3368  000FDC  C004  F04D         	movff	UART_rx_complete_irq@i,__rx_buffer_head	;volatile
  3369  000FE0  C005  F04E         	movff	UART_rx_complete_irq@i+1,__rx_buffer_head+1	;volatile
  3370                           
  3371                           ;uart.c: 133:     } else {
  3372  000FE4  EFF5  F007         	goto	i2l407
  3373  000FE8                     i2l1264:
  3374                           
  3375                           ;uart.c: 134:         RCREG;
  3376  000FE8  50AE               	movf	174,w,c	;volatile
  3377  000FEA                     i2l407:
  3378  000FEA  0012               	return		;funcret
  3379  000FEC                     __end_of_UART_rx_complete_irq:
  3380                           	callstack 0
  3381                           
  3382                           	psect	rparam
  3383  0000                     
  3384                           	psect	temp
  3385  000055                     btemp:
  3386                           	callstack 0
  3387  000055                     	ds	1
  3388  0000                     int$flags	set	btemp
  3389  0000                     wtemp8	set	btemp+1
  3390  0000                     ttemp5	set	btemp+1
  3391  0000                     ttemp6	set	btemp+4
  3392  0000                     ttemp7	set	btemp+8
  3393                           
  3394                           	psect	idloc
  3395                           
  3396                           ;Config register IDLOC0 @ 0x200000
  3397                           ;	unspecified, using default values
  3398  200000                     	org	2097152
  3399  200000  FF                 	db	255
  3400                           
  3401                           ;Config register IDLOC1 @ 0x200001
  3402                           ;	unspecified, using default values
  3403  200001                     	org	2097153
  3404  200001  FF                 	db	255
  3405                           
  3406                           ;Config register IDLOC2 @ 0x200002
  3407                           ;	unspecified, using default values
  3408  200002                     	org	2097154
  3409  200002  FF                 	db	255
  3410                           
  3411                           ;Config register IDLOC3 @ 0x200003
  3412                           ;	unspecified, using default values
  3413  200003                     	org	2097155
  3414  200003  FF                 	db	255
  3415                           
  3416                           ;Config register IDLOC4 @ 0x200004
  3417                           ;	unspecified, using default values
  3418  200004                     	org	2097156
  3419  200004  FF                 	db	255
  3420                           
  3421                           ;Config register IDLOC5 @ 0x200005
  3422                           ;	unspecified, using default values
  3423  200005                     	org	2097157
  3424  200005  FF                 	db	255
  3425                           
  3426                           ;Config register IDLOC6 @ 0x200006
  3427                           ;	unspecified, using default values
  3428  200006                     	org	2097158
  3429  200006  FF                 	db	255
  3430                           
  3431                           ;Config register IDLOC7 @ 0x200007
  3432                           ;	unspecified, using default values
  3433  200007                     	org	2097159
  3434  200007  FF                 	db	255
  3435                           
  3436                           	psect	config
  3437                           
  3438                           ;Config register CONFIG1L @ 0x300000
  3439                           ;	PLL Prescaler Selection bits
  3440                           ;	PLLDIV = 3, Divide by 3 (12 MHz oscillator input)
  3441                           ;	System Clock Postscaler Selection bits
  3442                           ;	CPUDIV = OSC4_PLL6, [Primary Oscillator Src: /4][96 MHz PLL Src: /6]
  3443                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3444                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  3445  300000                     	org	3145728
  3446  300000  3A                 	db	58
  3447                           
  3448                           ;Config register CONFIG1H @ 0x300001
  3449                           ;	Oscillator Selection bits
  3450                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  3451                           ;	Fail-Safe Clock Monitor Enable bit
  3452                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3453                           ;	Internal/External Oscillator Switchover bit
  3454                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3455  300001                     	org	3145729
  3456  300001  0E                 	db	14
  3457                           
  3458                           ;Config register CONFIG2L @ 0x300002
  3459                           ;	Power-up Timer Enable bit
  3460                           ;	PWRT = OFF, PWRT disabled
  3461                           ;	Brown-out Reset Enable bits
  3462                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3463                           ;	Brown-out Reset Voltage bits
  3464                           ;	BORV = 2, 
  3465                           ;	USB Voltage Regulator Enable bit
  3466                           ;	VREGEN = ON, USB voltage regulator enabled
  3467  300002                     	org	3145730
  3468  300002  31                 	db	49
  3469                           
  3470                           ;Config register CONFIG2H @ 0x300003
  3471                           ;	Watchdog Timer Enable bit
  3472                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3473                           ;	Watchdog Timer Postscale Select bits
  3474                           ;	WDTPS = 2048, 1:2048
  3475  300003                     	org	3145731
  3476  300003  16                 	db	22
  3477                           
  3478                           ; Padding undefined space
  3479  300004                     	org	3145732
  3480  300004  FF                 	db	255
  3481                           
  3482                           ;Config register CONFIG3H @ 0x300005
  3483                           ;	CCP2 MUX bit
  3484                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3485                           ;	PORTB A/D Enable bit
  3486                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3487                           ;	Low-Power Timer 1 Oscillator Enable bit
  3488                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3489                           ;	MCLR Pin Enable bit
  3490                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3491  300005                     	org	3145733
  3492  300005  01                 	db	1
  3493                           
  3494                           ;Config register CONFIG4L @ 0x300006
  3495                           ;	Stack Full/Underflow Reset Enable bit
  3496                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3497                           ;	Single-Supply ICSP Enable bit
  3498                           ;	LVP = ON, Single-Supply ICSP enabled
  3499                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3500                           ;	ICPRT = OFF, ICPORT disabled
  3501                           ;	Extended Instruction Set Enable bit
  3502                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3503                           ;	Background Debugger Enable bit
  3504                           ;	DEBUG = 0x1, unprogrammed default
  3505  300006                     	org	3145734
  3506  300006  85                 	db	133
  3507                           
  3508                           ; Padding undefined space
  3509  300007                     	org	3145735
  3510  300007  FF                 	db	255
  3511                           
  3512                           ;Config register CONFIG5L @ 0x300008
  3513                           ;	Code Protection bit
  3514                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3515                           ;	Code Protection bit
  3516                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3517                           ;	Code Protection bit
  3518                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3519                           ;	Code Protection bit
  3520                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3521  300008                     	org	3145736
  3522  300008  0F                 	db	15
  3523                           
  3524                           ;Config register CONFIG5H @ 0x300009
  3525                           ;	Boot Block Code Protection bit
  3526                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3527                           ;	Data EEPROM Code Protection bit
  3528                           ;	CPD = OFF, Data EEPROM is not code-protected
  3529  300009                     	org	3145737
  3530  300009  C0                 	db	192
  3531                           
  3532                           ;Config register CONFIG6L @ 0x30000A
  3533                           ;	Write Protection bit
  3534                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3535                           ;	Write Protection bit
  3536                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3537                           ;	Write Protection bit
  3538                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3539                           ;	Write Protection bit
  3540                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3541  30000A                     	org	3145738
  3542  30000A  0F                 	db	15
  3543                           
  3544                           ;Config register CONFIG6H @ 0x30000B
  3545                           ;	Configuration Register Write Protection bit
  3546                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3547                           ;	Boot Block Write Protection bit
  3548                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3549                           ;	Data EEPROM Write Protection bit
  3550                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3551  30000B                     	org	3145739
  3552  30000B  E0                 	db	224
  3553                           
  3554                           ;Config register CONFIG7L @ 0x30000C
  3555                           ;	Table Read Protection bit
  3556                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3557                           ;	Table Read Protection bit
  3558                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3559                           ;	Table Read Protection bit
  3560                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3561                           ;	Table Read Protection bit
  3562                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3563  30000C                     	org	3145740
  3564  30000C  0F                 	db	15
  3565                           
  3566                           ;Config register CONFIG7H @ 0x30000D
  3567                           ;	Boot Block Table Read Protection bit
  3568                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3569  30000D                     	org	3145741
  3570  30000D  40                 	db	64
  3571                           tosu	equ	0xFFF
  3572                           tosh	equ	0xFFE
  3573                           tosl	equ	0xFFD
  3574                           stkptr	equ	0xFFC
  3575                           pclatu	equ	0xFFB
  3576                           pclath	equ	0xFFA
  3577                           pcl	equ	0xFF9
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           indf0	equ	0xFEF
  3585                           postinc0	equ	0xFEE
  3586                           postdec0	equ	0xFED
  3587                           preinc0	equ	0xFEC
  3588                           plusw0	equ	0xFEB
  3589                           fsr0h	equ	0xFEA
  3590                           fsr0l	equ	0xFE9
  3591                           wreg	equ	0xFE8
  3592                           indf1	equ	0xFE7
  3593                           postinc1	equ	0xFE6
  3594                           postdec1	equ	0xFE5
  3595                           preinc1	equ	0xFE4
  3596                           plusw1	equ	0xFE3
  3597                           fsr1h	equ	0xFE2
  3598                           fsr1l	equ	0xFE1
  3599                           bsr	equ	0xFE0
  3600                           indf2	equ	0xFDF
  3601                           postinc2	equ	0xFDE
  3602                           postdec2	equ	0xFDD
  3603                           preinc2	equ	0xFDC
  3604                           plusw2	equ	0xFDB
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        38
    BSS         602
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      84
    BANK0           160      7     100
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S1862_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 15
		 -> i2c_scanBus@eish(COMRAM[15]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> i2c_scanBus@eish(COMRAM[15]), 

    UART_puts@ptr	PTR unsigned char  size(2) Largest target is 13
		 -> DS1307_Display_UART@dateStr(COMRAM[13]), DS1307_Display_UART@timeStr(COMRAM[11]), 

    LCD_puts@s	PTR unsigned char  size(2) Largest target is 15
		 -> i2c_scanBus@eish(COMRAM[15]), DS1307_Display_UART@dateStr(COMRAM[13]), DS1307_Display_UART@timeStr(COMRAM[11]), 

    LCD_putrs@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[10]), STR_6(CODE[8]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[9]), STR_2(CODE[8]), STR_1(CODE[8]), 

    BCD_to_ASCII@ptr	PTR unsigned char  size(2) Largest target is 13
		 -> DS1307_Display_UART@dateStr(COMRAM[13]), DS1307_Display_UART@timeStr(COMRAM[11]), 

    DS1307_read@myTime	PTR struct . size(2) Largest target is 7
		 -> main@now(BANK0[7]), 

    eish	PTR const unsigned char [7] size(2) Largest target is 11
		 -> STR_7(CODE[10]), STR_6(CODE[8]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[9]), STR_2(CODE[8]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_DS1307_Display_UART
    _UART_Init->___lldiv
    _LCD_init->_LCD_send
    _LCD_clear->_LCD_send
    _I2C_INTIALIZE->___aldiv
    _DS1307_read->_i2c_read
    _DS1307_read->_i2c_write
    _DS1307_Display_UART->_LCD_goto
    _UART_puts->_UART_write
    _LCD_puts->_LCD_send
    _LCD_putrs->_LCD_send
    _LCD_goto->_LCD_send

Critical Paths under _myISR_low in COMRAM

    None.

Critical Paths under _myISR_high in COMRAM

    _myISR_high->_UART_rx_complete_irq

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR_low in BANK0

    None.

Critical Paths under _myISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR_low in BANK1

    None.

Critical Paths under _myISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR_low in BANK2

    None.

Critical Paths under _myISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR_low in BANK3

    None.

Critical Paths under _myISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR_low in BANK4

    None.

Critical Paths under _myISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR_low in BANK5

    None.

Critical Paths under _myISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR_low in BANK6

    None.

Critical Paths under _myISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR_low in BANK7

    None.

Critical Paths under _myISR_high in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   11180
                                              0 BANK0      7     7      0
                _DS1307_Display_UART
                        _DS1307_read
                   _Enable_Interrupt
                      _I2C_INTIALIZE
                     _Interrupt_Init
                          _LCD_clear
                           _LCD_init
                         _Ports_Init
                          _UART_Init
                         _timerStart
                     _timerZero_Init
 ---------------------------------------------------------------------------------
 (1) _timerZero_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerStart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            9     6      3    1097
                                             23 COMRAM     9     6      3
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     781
                                             10 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Ports_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0    1173
                                             13 COMRAM     1     1      0
                           _LCD_send
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0    1173
                                             13 COMRAM     1     1      0
                           _LCD_send
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_INTIALIZE                                        7     4      3     746
                                             24 COMRAM     7     4      3
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                             10 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Enable_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS1307_read                                          2     0      2     351
                                             11 COMRAM     2     0      2
                             _i2c_RS
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_RS                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS1307_Display_UART                                 33    26      7    6536
                                             16 COMRAM    33    26      7
                       _BCD_to_ASCII
                           _LCD_goto
                          _LCD_putrs
                           _LCD_puts
                          _UART_puts
 ---------------------------------------------------------------------------------
 (2) _UART_puts                                            2     0      2     341
                                             12 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           2     2      0      96
                                             10 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_puts                                             2     0      2    1508
                                             13 COMRAM     2     0      2
                           _LCD_send
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            2     0      2    1328
                                             13 COMRAM     2     0      2
                           _LCD_send
 ---------------------------------------------------------------------------------
 (2) _LCD_goto                                             3     2      1    1781
                                             13 COMRAM     3     2      1
                           _LCD_send
 ---------------------------------------------------------------------------------
 (2) _LCD_send                                             3     2      1    1173
                                             10 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _BCD_to_ASCII                                         3     1      2     667
                                             10 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _myISR_low                                            3     3      0       0
                                              7 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myISR_high                                           2     2      0      68
                                              5 COMRAM     2     2      0
               _UART_rx_complete_irq
              _UART_tx_udr_empty_irq
 ---------------------------------------------------------------------------------
 (6) _UART_tx_udr_empty_irq                                1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _UART_rx_complete_irq                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307_Display_UART
     _BCD_to_ASCII
     _LCD_goto
       _LCD_send
     _LCD_putrs
       _LCD_send
     _LCD_puts
       _LCD_send
     _UART_puts
       _UART_write
   _DS1307_read
     _i2c_RS
     _i2c_read
     _i2c_start
     _i2c_stop
     _i2c_write
   _Enable_Interrupt
   _I2C_INTIALIZE
     ___aldiv
   _Interrupt_Init
   _LCD_clear
     _LCD_send
   _LCD_init
     _LCD_send
   _Ports_Init
   _UART_Init
     ___lldiv
   _timerStart
   _timerZero_Init

 _myISR_low (ROOT)

 _myISR_high (ROOT)
   _UART_rx_complete_irq
   _UART_tx_udr_empty_irq

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     200      21       25.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      54       1       89.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B8      20        0.0%
DATA                 0      0     2B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 29 12:32:06 2021

              ??_Interrupt_Init 000B                     _SSPSTATbits 000FC7                              bsr 000FE0  
                           l112 1314                             l121 1252                             l124 131A  
                           l220 1044                             l301 1142                             l109 12B4  
                           l118 12FE                             l223 12CC                             l231 12C6  
                           l400 11A6                             l232 12C8                             l241 114A  
                           l225 12DA                             l226 12DC                             l250 1290  
                           l235 12E0                             l180 0BFC                             l244 1164  
                           l252 129E                             l237 12EE                             l229 12B8  
                           l253 12A0                             l173 0CA4                             l238 12F0  
                           l246 1172                             l183 122E                             l247 1174  
                           l273 10D4                             l441 0D38                             l354 08DE  
                           l371 11D6                             l276 0DE2                             l356 0964  
                           l285 0E6C                             l295 110E                             l279 126E  
                           l359 09EC                             l448 0D48                             l289 0E7C  
                           l493 0AF8                             wreg 000FE8       DS1307_Display_UART@myTime 0011  
        ??_UART_rx_complete_irq 0001        __end_of_Enable_Interrupt 131C                            l2100 0E28  
                          l2102 0E3A                            l2110 1110                            l2040 10B2  
                          l2104 0E4A                            l2120 10DA                            l2112 1114  
                          l2200 1242                            l2050 10C2                            l2042 10B4  
                          l2034 109C                            l2106 0E5C                            l2122 10EE  
                          l2114 1126                            l2210 124C                            l2202 1244  
                          l2130 0CCC                            l2044 10B6                            l2036 10A6  
                          l2108 0E6C                            l2124 10F2                            l2116 112A  
                          l2060 11A4                            l2052 1178                            l2220 0D5C  
                          l2212 124E                            l2204 1246                            l2140 0D16  
                          l2132 0CD4                            l2300 12B2                            l2046 10BA  
                          l2038 10AA                            l2118 10D6                            l2054 117E  
                          l2070 12DE                            l2310 1316                            l2150 09F2  
                          l2302 12F2                            l2230 0D7A                            l2222 0D60  
                          l2214 1250                            l2206 1248                            l2142 0D26  
                          l2134 0CE0                            l2126 0CA6                            l2080 121A  
                          l2048 10C0                            l2056 1190                            l2072 1146  
                          l2064 12CA                            l2320 0C18                            l2312 0BFE  
                          l2160 0A32                            l2152 0A00                            l2304 1254  
                          l2240 0DA4                            l2232 0D7C                            l2224 0D62  
                          l2216 0D4A                            l2208 124A                            l2144 0D28  
                          l2136 0CEE                            l2128 0CB6                            l2082 121E  
                          l2058 11A0                            l2090 11BE                            l2074 1158  
                          l2066 128C                            l2330 0C78                            l2322 0C28  
                          l2314 0C02                            l2170 0A70                            l2162 0A36  
                          l2154 0A10                            l2306 125E                            l2242 0DAE  
                          l2234 0D8C                            l2226 0D64                            l2218 0D4C  
                          l2146 0D32                            l2138 0CF8                            l2250 0866  
                          l2092 0DE6                            l2084 11A8                            l2340 0B2C  
                          l2076 1162                            l2068 12B6                            l2332 0C8C  
                          l2324 0C3C                            l2316 0C08                            l2180 0AB8  
                          l2172 0A7E                            l2164 0A46                            l2156 0A14  
                          l2148 09EE                            l2244 0DC8                            l2236 0D90  
                          l2228 0D78                            l2260 08FA                            l2252 0874  
                          l2308 130E                            l2078 120A                            l2094 0DF6  
                          l2086 11AC                            l2350 0B54                            l2342 0B30  
                          l2334 0CA0                            l2326 0C50                            l2318 0C12  
                          l2182 0AC2                            l2174 0A88                            l2166 0A5C  
                          l2158 0A22                            l2246 0DD8                            l2238 0D92  
                          l2270 0980                            l2262 0908                            l2254 0882  
                          l2096 0E06                            l2088 11BA                            l2360 0B86  
                          l2352 0B62                            l2344 0B3E                            l2336 0AFA  
                          l2328 0C64                            l2176 0AA6                            l2168 0A64  
                          l2184 0AC8                            l2192 1230                            l2280 09E6  
                          l2272 098E                            l2264 0958                            l2256 0890  
                          l2248 0846                            l2098 0E18                            l2370 0BB8  
                          l2362 0B8A                            l2354 0B66                            l2346 0B42  
                          l2338 0B1E                            l2186 0AD8                            l2178 0AB6  
                          l2290 0FF8                            l2194 1234                            l2282 09E8  
                          l2266 095C                            l2258 08EC                            l2372 0BC2  
                          l2364 0B96                            l2356 0B74                            l2348 0B50  
                          l2188 0AE8                            l2292 0FFA                            l2196 1236  
                          l2284 09EA                            l2268 0972                            l2380 0F00  
                          l2374 0BCE                            l2366 0BA2                            l2358 0B78  
                          l2286 0FEC                            l2198 1238                            l2278 09E2  
                          l2294 12A2                            l2390 0F2C                            l2382 0F04  
                          l2376 0BD8                            l2368 0BAC                            l2288 0FF4  
                          l2296 12AE                            l2392 0F38                            l2384 0F14  
                          l2298 12B0                            l2394 0F48                            l2386 0F24  
                          l2378 0EFC                            l2396 0F4C                            l2388 0F28  
                          l2398 0F58                            STR_1 0839                            STR_2 0831  
                          STR_3 0820                            STR_4 0801                            STR_5 0816  
                          STR_6 0829                            STR_7 080C                            STR_8 0841  
                          u1100 12DA                            u1101 12D6                            u1110 129E  
                          u1111 129A                            u1200 0E3A                            u1120 12C6  
                          u1201 0E36                            u1121 12C2                            u1210 0E5C  
                          u1130 12EE                            u1211 0E58                            u1131 12EA  
                          u1220 1142                            u1140 1158                            u1300 0A7E  
                          u1221 113E                            u1141 1154                            u1301 0A7A  
                          u1230 110E                            u1310 0AA6                            u1231 110A  
                          u1311 0AA2                            u1160 1172                            u1320 0AD8  
                          u1240 0CCC                            u1400 0936                            u1161 116E  
                          u1321 0AD4                            u1241 0CC8                            u1090 1190  
                          u1170 11D6                            u1250 0CEE                            u1410 0972  
                          u1330 0874                            u1091 118C                            u1171 11D2  
                          u1155 1160                            u1251 0CEA                            u1411 096E  
                          u1331 0870                            u1180 0DF6                            u1156 1162  
                          u1260 0D16                            u1420 0980                            u1340 0882  
                          u1085 10A4                            u1181 0DF2                            u1261 0D12  
                          u1421 097C                            u1405 092E                            u1341 087E  
                          u1086 10A6                            u1190 0E18                            u1270 0A00  
                          u1430 098E                            u1350 0890                            u1191 0E14  
                          u1271 09FC                            u1431 098A                            u1351 088C  
                          u1280 0A22                            u1440 09BC                            u1360 08BE  
                          _LATD 000F8C                            u1281 0A1E                            u1290 0A5C  
                          u1450 1028                            u1370 08EC                            u1291 0A58  
                          u1371 08E8                            u1380 08FA                            u1461 0B04  
                          u1445 09B4                            u1381 08F6                            u1365 08B6  
                          u1390 0908                            u1471 0B16                            u1455 1020  
                          u1607 0D9A                            u1391 0904                            u1480 0F48  
                          u1617 0DB4                            u1481 0F44                            u1627 0DCE  
                          u1491 0F62                            u1637 1264                            u1647 0E72  
                          u1657 10CA                            u1577 0D52                            u1587 0D6A  
                          u1597 0D82                            i1l97 0050                            i2l91 108E  
    DS1307_Display_UART@dateStr 001A                   _state_machine 0051                            _flag 004F  
                          _eish 0032                            _main 0EFC                            _myIP 00A0  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            fsr2l 000FD9                            btemp 0055  
                          start 0060              __size_of_LCD_clear 001C      DS1307_Display_UART@timeStr 0027  
                  ___param_bank 000000              __size_of_LCD_putrs 003A                   _I2C_INTIALIZE 0FEC  
              __end_of_LCD_init 0DE4                __end_of_LCD_goto 0E7E                __end_of_LCD_send 10D6  
              __end_of_LCD_puts 1144                 __end_of___aldiv 0AFA                           ?_main 0001  
               __end_of___lldiv 0D4A                           _T0CON 000FD5                           i2l403 0F88  
                         i2l411 1206                           i2l404 0F98                           i2l407 0FEA  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR0H 000FD7  
                         _TMR0L 000FD6                           _SPBRG 000FAF                           _TRISD 000F95  
                         _TXREG 000FAD                           _TXSTA 000FAC              __size_of_UART_Init 01A8  
            __size_of_UART_puts 0030                           _dummy 0050                     ?_UART_write 0001  
                         tablat 000FF5                ??_timerZero_Init 000B                           plusw0 000FEB  
                         plusw1 000FE3                           plusw2 000FDB                           ttemp5 0056  
                         ttemp6 0059                           ttemp7 005D                           status 000FD8  
                         wtemp8 0056                 __initialization 0E7E                    __end_of_main 0F76  
                ?_I2C_INTIALIZE 0019                __end_of_i2c_read 1176                __end_of_i2c_stop 12CA  
                        ??_main 0032          BCD_to_ASCII@valueInBCD 000D                   __activetblptr 000001  
             __end_of_LCD_clear 1270               __end_of_LCD_putrs 1110                          _ADCON1 000FC1  
                        i1l1480 004E                          i1l1474 0026                          i1l1476 0034  
                        i1l1478 0042                          i2l1260 0FCC                          i2l1252 0F76  
                        i2l1262 0FDC                          i2l1254 0F84                          i2l1264 0FE8  
                        i2l1256 0F96                          i2l1258 0F9C           __size_of_BCD_to_ASCII 0028  
                        i2l1780 11EE                          i2l1940 106E                          i2l1782 11F2  
                        i2l1942 107C                          i2l1934 104E                          i2l1784 1204  
                        i2l1776 11D8                          i2l1944 108A                          i2l1936 105C  
                        i2l1778 11E8                          i2l1938 106A                          _SPBRGH 000FB0  
                        _SSPADD 000FC8                          _SSPBUF 000FC9              __size_of_i2c_start 0014  
            __size_of_i2c_write 0018                          _i2c_RS 12DE    __size_of_DS1307_Display_UART 0104  
             __end_of_UART_Init 09EE                       ??___aldiv 0013               __end_of_UART_puts 11D8  
                     ??___lldiv 0013             __size_of_UART_write 0032                          clear_0 0EC6  
                        clear_1 0ED8                          clear_2 0EE4                          isa$std 000001  
__size_of_UART_tx_udr_empty_irq 0030   __end_of_UART_tx_udr_empty_irq 1208                    __pdataCOMRAM 0032  
                    _Ports_Init 1230                    _BCD_to_ASCII 1208                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                    __accesstop 0060         __end_of__initialization 0EEA                       ?_LCD_init 0001  
                     ?_LCD_goto 000E                       ?_LCD_send 000B                       ?_LCD_puts 000E  
                 ___rparam_used 000001                 ??_I2C_INTIALIZE 001C                  __pcstackCOMRAM 0001  
                  __pidataBANK0 1300                    LCD_send@data 000B                       LCD_goto@x 0010  
                     LCD_goto@y 000E               __end_of_i2c_start 12DE                       LCD_puts@s 000E  
             __end_of_i2c_write 12A2              __size_of_myISR_low 0048               ?_Enable_Interrupt 0001  
                    __pbssBANK0 0060                   ??_DS1307_read 000E                       ?_i2c_read 0001  
                     ?_i2c_stop 0001              ??_Enable_Interrupt 000B                      ??_LCD_init 000E  
                    ??_LCD_goto 000F                      ??_LCD_send 000C                      ??_LCD_puts 0010  
                       ?_i2c_RS 0001                         _BAUDCON 000FB8                      __rx_buffer 00C4  
                   ?_Ports_Init 0001                         i1u50_20 0042                         i1u50_21 003E  
                    __tx_buffer 0060                         i1u49_20 0034                         i1u49_21 0030  
                       i2u26_40 0F84                         i2u26_41 0F80                         i2u27_40 0F96  
                       i2u27_41 0F92                         i2u28_40 0FCC                         i2u28_41 0FC8  
                       i2u79_40 1204                         i2u95_40 105C                         i2u79_41 1200  
                       i2u95_41 1058                         i2u96_40 106A                         i2u96_41 1066  
                       i2u97_40 107C                         i2u97_41 1078                         i2u98_40 108A  
                       i2u98_41 1086                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                  ??_UART_write 000B                      _myISR_high 0008   __size_of_UART_rx_complete_irq 0076  
                    ??_i2c_read 000B                      ??_i2c_stop 000B                         __Hparam 0000  
               __size_of_i2c_RS 0014                         __Lparam 0000             __end_of_DS1307_read 0CA6  
                       ___aldiv 09EE                         ___lldiv 0CA6                    __psmallconst 0800  
             __end_of_myISR_low 0060                         __pcinit 0E7E                         __ramtop 0800  
            __end_of_UART_write 11A8                         __ptext0 0EFC                         __ptext1 12A2  
                       __ptext2 130E                         __ptext3 0846                         __ptext4 0CA6  
                       __ptext5 1230                         __ptext6 0D4A                         __ptext7 1254  
                       __ptext8 12F2                         __ptext9 0FEC                       _T0CONbits 000FD5  
       __size_of_Interrupt_Init 000E                ___aldiv@dividend 000B                         _seconds 0052  
           _DS1307_Display_UART 0AFA                         main@now 00BD                  __pintcode_body 1046  
                     _LCD_clear 1254            end_of_initialization 0EEA                       _LCD_putrs 10D6  
                       int_func 1046                 ___lldiv@divisor 000F            ?_DS1307_Display_UART 0011  
               ___lldiv@counter 0017             __size_of_Ports_Init 0024                       _RCSTAbits 000FAB  
                   UART_write@i 000C                ___aldiv@quotient 0015                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
                     _UART_Init 0846                      _timerStart 130E                 __rx_buffer_head 004D  
               __rx_buffer_tail 004B                       _UART_puts 11A8                   i2c_write@data 000B  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                    ?_LCD_clear 0001                     ?_myISR_high 0001                      ?_LCD_putrs 000E  
                   _DS1307_read 0BFE                       _TXSTAbits 000FAC           ??_DS1307_Display_UART 0018  
             __size_of_LCD_init 009A               __size_of_LCD_goto 009A               __size_of_LCD_send 003C  
         UART_rx_complete_irq@c 0003           UART_rx_complete_irq@i 0004               __size_of_LCD_puts 0034  
                __end_of_i2c_RS 12F2          UART_tx_udr_empty_irq@c 0001         __size_of_timerZero_Init 0014  
                   _BAUDCONbits 000FB8                      ?_UART_Init 0018                   __pidataCOMRAM 1270  
                    ?_UART_puts 000D             start_initialization 0E7E           _UART_tx_udr_empty_irq 11D8  
                     _i2c_start 12CA                      LCD_send@RS 000D                       _i2c_write 128A  
                    LCD_putrs@s 000E               __size_of_i2c_read 0032               __size_of_i2c_stop 0014  
                      ??_i2c_RS 000B           __end_of_I2C_INTIALIZE 1046       __size_of_Enable_Interrupt 0006  
                   __pdataBANK0 00B0                     ?_timerStart 0001             __size_of_myISR_high 1092  
            I2C_INTIALIZE@clock 0019                  _Interrupt_Init 12F2                     __pbssBIGRAM 00C4  
                  ??_Ports_Init 000B                     __pbssCOMRAM 004B                   __pcstackBANK0 00BD  
                    ?_i2c_start 0001                      ?_i2c_write 0001               DS1307_read@myTime 000C  
                   ??_LCD_clear 000E                     ??_LCD_putrs 0010              __end_of_Ports_Init 1254  
                     __pintcode 0008                        ?___aldiv 000B                   UART_Init@temp 001F  
                      ?___lldiv 000B    __end_of_UART_rx_complete_irq 0FEC                     __pintcodelo 0018  
                   ??_UART_Init 001B          __end_of_Interrupt_Init 1300                     ??_UART_puts 000F  
                   __smallconst 0800                       _myISR_low 0018          ?_UART_tx_udr_empty_irq 0001  
      DS1307_Display_UART@F3235 0040        DS1307_Display_UART@F3237 00B0                i2c_read@ACK_NACK 000B  
               ___aldiv@divisor 000F                 ___aldiv@counter 0013             __size_of_timerStart 0008  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LCD_init 0D4A  
                      _LCD_goto 0DE4                        _LCD_send 109A                        _IPR1bits 000F9F  
                      _LCD_puts 1110                        _PIE1bits 000F9D                        _PIR1bits 000F9E  
                _timerZero_Init 12A2                        _RCONbits 000FD0               UART_Init@baudRate 0018  
               ?_Interrupt_Init 0001                 BCD_to_ASCII@ptr 000B                 __tx_buffer_head 0054  
                    ?_myISR_low 0001                 __tx_buffer_tail 0053                  UART_write@data 000B  
                 ?_BCD_to_ASCII 000B                     ??_i2c_start 000B                     ??_i2c_write 000B  
                   _INTCON2bits 000FF1                     _INTCON3bits 000FF0                       copy_data0 0E92  
                     copy_data1 0EB2                    ??_myISR_high 0006                        _i2c_read 1144  
                  ?_DS1307_read 000C                        _i2c_stop 12B6          __end_of_timerZero_Init 12B6  
                      __Hrparam 0000                        __Lrparam 0000                    __Lsmallconst 0800  
              _Enable_Interrupt 1316                __size_of___aldiv 010C                __size_of___lldiv 00A4  
            __end_of_myISR_high 109A                  ??_BCD_to_ASCII 000D                        __ptext10 09EE  
                      __ptext11 1316                        __ptext20 1176                        __ptext12 0BFE  
                      __ptext21 1110                        __ptext13 128A                        __ptext22 10D6  
                      __ptext14 12B6                        __ptext23 0DE4                        __ptext15 12CA  
                      __ptext24 109A                        __ptext16 1144                        __ptext25 1208  
                      __ptext17 12DE                        __ptext18 0AFA                        __ptext19 11A8  
                      __ptext28 11D8                        __ptext29 0F76     __end_of_DS1307_Display_UART 0BFE  
          _UART_rx_complete_irq 0F76                   __size_of_main 007A                 ?_timerZero_Init 0001  
                      isa$xinst 000000                        int$flags 0055                    ??_timerStart 000B  
                   ??_myISR_low 0008                      _INTCONbits 000FF2                        intlevel1 0000  
                      intlevel2 0000           ?_UART_rx_complete_irq 0001                ___lldiv@dividend 000B  
            __end_of_timerStart 1316                    UART_puts@ptr 000D         ??_UART_tx_udr_empty_irq 0001  
              ___lldiv@quotient 0013                    ___aldiv@sign 0014                     _SSPCON2bits 000FC5  
                    _WDTCONbits 000FD1                      _UART_write 1176          __size_of_I2C_INTIALIZE 005A  
          __size_of_DS1307_read 00A8            __end_of_BCD_to_ASCII 1230  
